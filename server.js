const http = require('http');
const url = require('url');
const { randomUUID } = require('crypto');

// This Map will store all active game sessions
const activeGames = new Map(); //

// --- YOUR FULL 'recrCode' ARRAY ---
const recrCode = [ //
    [-60,5,-62,4,-35,3,27,3,24,2],
    [-60,5,-53,4,12,3,21,3,76,2],
    [-60,5,-43,4,-49,3,44,3,24,2],
    [-60,5,-34,4,28,3,65,3,9,2],
    [-60,5,-24,4,-31,3,37,3,57,2],
    [-60,5,-16,4,43,3,84,3,72,2],
    [-60,5,-7,4,-63,3,42,3,87,2],
    [-60,5,2,4,-43,3,45,3,-30,2],
    [-60,5,13,4,-59,3,94,3,31,2],
    [-60,5,24,4,14,3,73,3,68,2],
    [-60,5,36,4,-11,3,27,3,-87,2],
    [-60,5,51,4,-48,3,-27,3,-30,2],
    [-60,5,64,4,-72,3,-7,3,94,2],
    [-60,5,76,4,34,3,87,3,-86,2],
    [-60,5,93,4,-79,3,-24,3,83,2],
    [-59,5,-65,4,-70,3,17,3,92,2],
    [-59,5,-55,4,-68,3,-30,3,23,2],
    [-59,5,-45,4,-42,3,-27,3,57,2],
    [-59,5,-35,4,14,3,28,3,-10,2],
    [-59,5,-24,4,-50,3,27,3,-3,2],
    [-59,5,-15,4,-4,3,65,3,18,2],
    [-59,5,-5,4,-78,3,65,3,-86,2],
    [-59,5,4,4,41,3,91,3,-78,2],
    [-59,5,16,4,42,3,52,3,25,2],
    [-59,5,32,4,-16,3,83,3,-37,2],
    [-59,5,45,4,-34,3,15,3,74,2],
    [-59,5,63,4,-72,3,76,3,24,2],
    [-59,5,82,4,4,3,55,3,26,2],
    [-58,5,-70,4,-31,3,-14,3,62,2],
    [-58,5,-60,4,35,3,82,3,13,2],
    [-58,5,-49,4,-24,3,-12,3,-11,2],
    [-58,5,-37,4,-34,3,-6,3,-66,2],
    [-58,5,-26,4,-21,3,83,3,-67,2],
    [-58,5,-16,4,13,3,63,3,-82,2],
    [-58,5,-6,4,41,3,81,3,23,2],
    [-58,5,5,4,-36,3,21,3,61,2],
    [-58,5,21,4,-60,3,92,3,-71,2],
    [-58,5,34,4,28,3,38,3,31,2],
    [-58,5,51,4,-49,3,61,3,-71,2],
    [-58,5,73,4,24,3,51,3,-37,2],
    [-57,5,-70,4,-41,3,73,3,-13,2],
    [-57,5,-60,4,17,3,54,3,61,2],
    [-57,5,-49,4,-32,3,16,3,13,2],
    [-57,5,-38,4,-43,3,26,3,64,2],
    [-57,5,-26,4,-34,3,1,3,-17,2],
    [-57,5,-16,4,-17,3,31,3,53,2],
    [-57,5,-6,4,-12,3,-7,3,-42,2],
    [-57,5,5,4,-58,3,84,3,81,2],
    [-57,5,21,4,-79,3,-63,3,41,2],
    [-57,5,34,4,-21,3,-10,3,93,2],
    [-57,5,51,4,-79,3,-72,3,-38,2],
    [-57,5,82,4,-48,3,26,3,49,2],
    [-56,5,-65,4,-25,3,46,3,61,2],
    [-56,5,-54,4,-71,3,1,3,-12,2],
    [-56,5,-44,4,67,3,91,3,46,2],
    [-56,5,-32,4,-75,3,91,3,78,2],
    [-56,5,-21,4,-68,3,98,3,-53,2],
    [-56,5,-11,4,-58,3,-55,3,-60,2],
    [-56,5,-1,4,-63,3,43,3,4,2],
    [-56,5,12,4,-44,3,25,3,-52,2],
    [-56,5,25,4,-3,3,58,3,94,2],
    [-56,5,42,4,-64,3,-47,3,-80,2],
    [-56,5,62,4,-27,3,-1,3,31,2],
    [-56,5,97,4,-65,3,-49,3,-10,2],
    [-55,5,-61,4,-31,3,-4,3,57,2],
    [-55,5,-50,4,-69,3,-46,3,57,2],
    [-55,5,-40,4,44,3,97,3,23,2],
    [-55,5,-29,4,68,3,92,3,46,2],
    [-55,5,-17,4,-71,3,48,3,-89,2],
    [-55,5,-7,4,-68,3,-15,3,-4,2],
    [-55,5,3,4,33,3,52,3,82,2],
    [-55,5,16,4,-38,3,81,3,6,2],
    [-55,5,32,4,58,3,62,3,42,2],
    [-55,5,46,4,-44,3,16,3,-90,2],
    [-55,5,77,4,-16,3,61,3,-4,2],
    [-54,5,-68,4,31,3,44,3,-38,2],
    [-54,5,-57,4,-38,3,11,3,-8,2],
    [-54,5,-46,4,-59,3,-43,3,-65,2],
    [-54,5,-35,4,-63,3,-62,3,-48,2],
    [-54,5,-23,4,-59,3,17,3,-24,2],
    [-54,5,-23,4,-58,3,97,3,-34,2],
    [-54,5,-13,4,-49,3,34,3,-14,2],
    [-54,5,-3,4,-50,3,-8,3,85,2],
    [-54,5,7,4,-20,3,21,3,-66,2],
    [-54,5,23,4,-1,3,16,3,-35,2],
    [-54,5,37,4,-57,3,22,3,-53,2],
    [-54,5,57,4,-9,3,67,3,34,2],
    [-54,5,95,4,-1,3,44,3,-15,2],
    [-53,5,-62,4,-54,3,56,3,-3,2],
    [-53,5,-52,4,16,3,47,3,-11,2],
    [-53,5,-41,4,-16,3,57,3,-24,2],
    [-53,5,-30,4,-27,3,24,3,5,2],
    [-53,5,-19,4,-18,3,1,3,9,2],
    [-53,5,-9,4,-6,3,32,3,-60,2],
    [-53,5,2,4,-21,3,96,3,-38,2],
    [-53,5,15,4,-66,3,78,3,64,2],
    [-53,5,31,4,-25,3,75,3,19,2],
    [-53,5,45,4,-72,3,3,3,96,2],
    [-53,5,67,4,-13,3,27,3,-88,2],
    [-53,5,95,4,-19,3,31,3,-79,2],
    [-52,5,-64,4,15,3,21,3,41,2],
    [-52,5,-54,4,27,3,75,3,-83,2],
    [-52,5,-43,4,-69,3,14,3,-1,2],
    [-52,5,-33,4,-36,3,3,3,-17,2],
    [-52,5,-23,4,47,3,88,3,-77,2],
    [-52,5,-12,4,-51,3,-50,3,-83,2],
    [-52,5,-3,4,-31,3,46,3,-63,2],
    [-52,5,7,4,-68,3,-20,3,-46,2],
    [-52,5,22,4,-50,3,42,3,-78,2],
    [-52,5,35,4,-65,3,-22,3,-14,2],
    [-52,5,47,4,43,3,95,3,23,2],
    [-52,5,67,4,-6,3,17,3,65,2],
    [-52,5,87,4,-56,3,16,3,45,2],
    [-51,5,-68,4,-26,3,8,3,11,2],
    [-51,5,-59,4,13,3,36,3,-84,2],
    [-51,5,-49,4,-57,3,46,3,14,2],
    [-51,5,-40,4,16,3,83,3,78,2],
    [-51,5,-30,4,-36,3,42,3,23,2],
    [-51,5,-20,4,-70,3,13,3,63,2],
    [-51,5,-12,4,-9,3,66,3,-20,2],
    [-51,5,-4,4,47,3,58,3,-12,2],
    [-51,5,5,4,-1,3,53,3,97,2],
    [-51,5,16,4,32,3,36,3,86,2],
    [-51,5,31,4,-26,3,78,3,28,2],
    [-51,5,43,4,-55,3,-42,3,76,2],
    [-51,5,56,4,-72,3,-69,3,13,2],
    [-51,5,72,4,26,3,67,3,24,2],
    [-51,5,85,4,-32,3,93,3,-1,2],
    [-51,5,97,4,-49,3,-23,3,-27,2],
    [-50,5,-62,4,4,3,77,3,-27,2],
    [-50,5,-52,4,-47,3,-28,3,5,2],
    [-50,5,-42,4,-76,3,-69,3,-6,2],
    [-50,5,-33,4,3,3,77,3,38,2],
    [-50,5,-23,4,-27,3,56,3,-30,2],
    [-50,5,-13,4,-58,3,16,3,56,2],
    [-50,5,-5,4,-12,3,82,3,93,2],
    [-50,5,4,4,18,3,81,3,75,2],
    [-50,5,16,4,-76,3,2,3,81,2],
    [-50,5,27,4,42,3,93,3,66,2],
    [-50,5,42,4,17,3,85,3,39,2],
    [-50,5,55,4,17,3,71,3,-67,2],
    [-50,5,72,4,7,3,36,3,-59,2],
    [-50,5,85,4,-25,3,-19,3,-74,2],
    [-50,5,97,4,-39,3,63,3,-37,2],
    [-49,5,-61,4,-28,3,16,3,53,2],
    [-49,5,-51,4,7,3,92,3,26,2],
    [-49,5,-40,4,-63,3,27,3,-86,2],
    [-49,5,-30,4,-11,3,95,3,-63,2],
    [-49,5,-18,4,-63,3,56,3,-65,2],
    [-49,5,-9,4,-10,3,86,3,2,2],
    [-49,5,2,4,-70,3,-66,3,38,2],
    [-49,5,14,4,-75,3,53,3,97,2],
    [-49,5,26,4,32,3,65,3,75,2],
    [-49,5,42,4,3,3,73,3,-61,2],
    [-49,5,62,4,-3,3,51,3,-36,2],
    [-49,5,82,4,-20,3,75,3,-58,2],
    [-49,5,96,4,-27,3,-4,3,-8,2],
    [-48,5,-61,4,-70,3,-8,3,16,2],
    [-48,5,-51,4,22,3,31,3,17,2],
    [-48,5,-40,4,4,3,63,3,51,2],
    [-48,5,-29,4,13,3,82,3,-43,2],
    [-48,5,-16,4,-72,3,55,3,-32,2],
    [-48,5,-6,4,-53,3,84,3,9,2],
    [-48,5,5,4,-67,3,45,3,-24,2],
    [-48,5,21,4,-73,3,44,3,56,2],
    [-48,5,34,4,31,3,42,3,-16,2],
    [-48,5,54,4,-22,3,26,3,-73,2],
    [-48,5,83,4,-62,3,75,3,-43,2],
    [-47,5,-70,4,-31,3,82,3,-39,2],
    [-47,5,-59,4,-56,3,-11,3,54,2],
    [-47,5,-48,4,-71,3,-14,3,94,2],
    [-47,5,-36,4,-73,3,-10,3,-13,2],
    [-47,5,-25,4,-60,3,15,3,-89,2],
    [-47,5,-14,4,-31,3,-7,3,62,2],
    [-47,5,-4,4,-9,3,71,3,-48,2],
    [-47,5,7,4,-59,3,62,3,-88,2],
    [-47,5,23,4,-40,3,6,3,32,2],
    [-47,5,37,4,-68,3,91,3,5,2],
    [-47,5,71,4,1,3,81,3,98,2],
    [-47,5,95,4,-33,3,11,3,73,2],
    [-46,5,-62,4,-70,3,87,3,36,2],
    [-46,5,-52,4,38,3,43,3,31,2],
    [-46,5,-41,4,18,3,95,3,-68,2],
    [-46,5,-30,4,23,3,71,3,-85,2],
    [-46,5,-18,4,-74,3,-52,3,-79,2],
    [-46,5,-7,4,-61,3,-8,3,79,2],
    [-46,5,4,4,-69,3,-54,3,-42,2],
    [-46,5,16,4,82,3,97,3,-75,2],
    [-46,5,33,4,-20,3,-17,3,43,2],
    [-46,5,61,4,-78,3,-3,3,44,2],
    [-46,5,92,4,-71,3,-21,3,-28,2],
    [-45,5,-67,4,-32,3,-14,3,43,2],
    [-45,5,-56,4,-50,3,28,3,-4,2],
    [-45,5,-44,4,-63,3,-51,3,88,2],
    [-45,5,-33,4,-62,3,-17,3,-29,2],
    [-45,5,-22,4,-40,3,-3,3,-17,2],
    [-45,5,-11,4,-22,3,23,3,-74,2],
    [-45,5,-1,4,-9,3,-5,3,-79,2],
    [-45,5,13,4,-67,3,51,3,-88,2],
    [-45,5,26,4,-14,3,-13,3,-15,2],
    [-45,5,47,4,-66,3,7,3,-3,2],
    [-45,5,81,4,-27,3,33,3,61,2],
    [-45,5,97,4,22,3,27,3,-8,2],
    [-44,5,-60,4,-22,3,61,3,-5,2],
    [-44,5,-49,4,-42,3,-15,3,23,2],
    [-44,5,-38,4,-40,3,-32,3,-26,2],
    [-44,5,-27,4,-19,3,95,3,69,2],
    [-44,5,-16,4,22,3,88,3,-33,2],
    [-44,5,-4,4,-78,3,-9,3,61,2],
    [-44,5,6,4,-26,3,-5,3,77,2],
    [-44,5,22,4,-16,3,28,3,92,2],
    [-44,5,36,4,-52,3,17,3,-10,2],
    [-44,5,67,4,76,3,97,3,-17,2],
    [-44,5,94,4,2,3,67,3,-16,2],
    [-43,5,-64,4,-24,3,46,3,54,2],
    [-43,5,-52,4,-45,3,2,3,47,2],
    [-43,5,-41,4,-59,3,36,3,-20,2],
    [-43,5,-30,4,-62,3,88,3,3,2],
    [-43,5,-19,4,-48,3,24,3,-61,2],
    [-43,5,-8,4,-32,3,-14,3,49,2],
    [-43,5,3,4,-32,3,11,3,-34,2],
    [-43,5,16,4,-50,3,-34,3,96,2],
    [-43,5,32,4,65,3,91,3,-27,2],
    [-43,5,55,4,-5,3,67,3,-14,2],
    [-43,5,84,4,-40,3,-32,3,-71,2],
    [-43,5,96,4,55,3,87,3,74,2],
    [-42,5,-61,4,-55,3,-53,3,69,2],
    [-42,5,-51,4,-25,3,5,3,-84,2],
    [-42,5,-41,4,37,3,55,3,27,2],
    [-42,5,-30,4,-46,3,26,3,-58,2],
    [-42,5,-20,4,37,3,77,3,65,2],
    [-42,5,-9,4,-46,3,98,3,-25,2],
    [-42,5,1,4,17,3,55,3,7,2],
    [-42,5,13,4,-2,3,46,3,-10,2],
    [-42,5,26,4,-38,3,31,3,-37,2],
    [-42,5,44,4,-49,3,94,3,-14,2],
    [-42,5,64,4,-39,3,-31,3,-45,2],
    [-42,5,84,4,-53,3,66,3,-45,2],
    [-42,5,96,4,-59,3,-43,3,-34,2],
    [-41,5,-64,4,1,3,31,3,-25,2],
    [-41,5,-54,4,-52,3,-49,3,-50,2],
    [-41,5,-45,4,76,3,83,3,72,2],
    [-41,5,-35,4,-11,3,37,3,5,2],
    [-41,5,-25,4,-44,3,31,3,-11,2],
    [-41,5,-15,4,-73,3,4,3,-8,2],
    [-41,5,-6,4,-10,3,1,3,37,2],
    [-41,5,3,4,35,3,98,3,-78,2],
    [-41,5,15,4,-77,3,-48,3,13,2],
    [-41,5,26,4,34,3,86,3,-56,2],
    [-41,5,42,4,11,3,91,3,97,2],
    [-41,5,55,4,7,3,74,3,91,2],
    [-41,5,72,4,2,3,26,3,-42,2],
    [-41,5,85,4,-27,3,65,3,95,2],
    [-41,5,96,4,-29,3,63,3,88,2],
    [-40,5,-62,4,-73,3,-68,3,-71,2],
    [-40,5,-53,4,5,3,93,3,-79,2],
    [-40,5,-43,4,-19,3,31,3,44,2],
    [-40,5,-33,4,-39,3,18,3,46,2],
    [-40,5,-23,4,-55,3,84,3,-44,2],
    [-40,5,-13,4,-68,3,-17,3,98,2],
    [-40,5,-4,4,28,3,83,3,47,2],
    [-40,5,5,4,86,3,91,3,42,2],
    [-40,5,17,4,-43,3,46,3,-57,2],
    [-40,5,32,4,-42,3,-17,3,85,2],
    [-40,5,45,4,-14,3,86,3,-64,2],
    [-40,5,62,4,-5,3,45,3,-44,2],
    [-40,5,75,4,18,3,61,3,72,2],
    [-40,5,91,4,-38,3,-35,3,42,2],
    [-39,5,-68,4,-40,3,13,3,-86,2],
    [-39,5,-58,4,14,3,34,3,-37,2],
    [-39,5,-47,4,-51,3,33,3,-64,2],
    [-39,5,-37,4,34,3,82,3,-88,2],
    [-39,5,-26,4,-20,3,-14,3,-58,2],
    [-39,5,-15,4,-53,3,84,3,-4,2],
    [-39,5,-5,4,71,3,92,3,-16,2],
    [-39,5,6,4,-74,3,-35,3,-83,2],
    [-39,5,21,4,-43,3,76,3,-37,2],
    [-39,5,34,4,-22,3,-9,3,-44,2],
    [-39,5,54,4,-8,3,73,3,-13,2],
    [-39,5,74,4,8,3,87,3,-16,2],
    [-39,5,92,4,-58,3,73,3,64,2],
    [-38,5,-66,4,-59,3,73,3,-30,2],
    [-38,5,-55,4,-53,3,27,3,11,2],
    [-38,5,-44,4,-39,3,28,3,87,2],
    [-38,5,-33,4,-9,3,13,3,81,2],
    [-38,5,-21,4,-77,3,33,3,54,2],
    [-38,5,-10,4,-65,3,-56,3,-19,2],
    [-38,5,2,4,-62,3,75,3,-83,2],
    [-38,5,15,4,-75,3,88,3,-32,2],
    [-38,5,31,4,-3,3,83,3,-16,2],
    [-38,5,54,4,-16,3,73,3,-31,2],
    [-38,5,83,4,-45,3,24,3,95,2],
    [-38,5,96,4,-66,3,12,3,39,2],
    [-37,5,-61,4,-75,3,-68,3,-84,2],
    [-37,5,-50,4,-74,3,31,3,52,2],
    [-37,5,-39,4,-70,3,87,3,74,2],
    [-37,5,-28,4,-60,3,-45,3,-5,2],
    [-37,5,-16,4,-39,3,97,3,21,2],
    [-37,5,-5,4,-8,3,52,3,78,2],
    [-37,5,6,4,-36,3,88,3,93,2],
    [-37,5,22,4,-9,3,53,3,-56,2],
    [-37,5,43,4,-40,3,33,3,17,2],
    [-37,5,82,4,-60,3,-41,3,-18,2],
    [-37,5,94,4,71,3,83,3,41,2],
    [-36,5,-63,4,1,3,22,3,88,2],
    [-36,5,-52,4,21,3,78,3,-57,2],
    [-36,5,-41,4,53,3,67,3,-60,2],
    [-36,5,-29,4,-79,3,24,3,14,2],
    [-36,5,-18,4,-60,3,14,3,98,2],
    [-36,5,-7,4,-43,3,-25,3,64,2],
    [-36,5,5,4,-54,3,-19,3,-55,2],
    [-36,5,21,4,-54,3,-9,3,-39,2],
    [-36,5,42,4,-79,3,-37,3,-18,2],
    [-36,5,77,4,-23,3,-1,3,-72,2],
    [-36,5,93,4,-41,3,37,3,-8,2],
    [-35,5,-64,4,-67,3,71,3,-18,2],
    [-35,5,-53,4,-61,3,-54,3,-16,2],
    [-35,5,-42,4,-49,3,-44,3,82,2],
    [-35,5,-31,4,-37,3,12,3,-40,2],
    [-35,5,-20,4,-19,3,2,3,25,2],
    [-35,5,-9,4,-1,3,76,3,61,2],
    [-35,5,3,4,11,3,17,3,-84,2],
    [-35,5,16,4,-12,3,48,3,92,2],
    [-35,5,37,4,-56,3,-8,3,14,2],
    [-35,5,71,4,13,3,21,3,67,2],
    [-35,5,91,4,38,3,58,3,-64,2],
    [-34,5,-67,4,-29,3,31,3,-89,2],
    [-34,5,-56,4,-8,3,93,3,-71,2],
    [-34,5,-45,4,17,3,23,3,-84,2],
    [-34,5,-33,4,35,3,47,3,31,2],
    [-34,5,-21,4,-72,3,95,3,-79,2],
    [-34,5,-10,4,-61,3,87,3,-73,2],
    [-34,5,2,4,-58,3,-7,3,24,2],
    [-34,5,15,4,-76,3,-49,3,-75,2],
    [-34,5,35,4,-6,3,1,3,45,2],
    [-34,5,67,4,-33,3,37,3,-2,2],
    [-34,5,87,4,3,3,23,3,-65,2],
    [-33,5,-68,4,-60,3,95,3,-77,2],
    [-33,5,-57,4,-42,3,-19,3,-60,2],
    [-33,5,-46,4,-10,3,-9,3,-16,2],
    [-33,5,-35,4,22,3,78,3,-44,2],
    [-33,5,-22,4,-78,3,-45,3,-47,2],
    [-33,5,-11,4,-68,3,-55,3,71,2],
    [-33,5,1,4,-66,3,88,3,-10,2],
    [-33,5,13,4,26,3,44,3,-78,2],
    [-33,5,27,4,-39,3,22,3,-58,2],
    [-33,5,56,4,-42,3,16,3,99,2],
    [-33,5,82,4,-67,3,54,3,-17,2],
    [-33,5,95,4,-74,3,26,3,-37,2],
    [-32,5,-64,4,-23,3,54,3,49,2],
    [-32,5,-53,4,-69,3,94,3,-33,2],
    [-32,5,-43,4,-4,3,8,3,18,2],
    [-32,5,-31,4,-60,3,26,3,-19,2],
    [-32,5,-21,4,12,3,85,3,-89,2],
    [-32,5,-10,4,-51,3,-29,3,76,2],
    [-32,5,1,4,11,3,45,3,-84,2],
    [-32,5,13,4,7,3,94,3,-71,2],
    [-32,5,26,4,-5,3,36,3,48,2],
    [-32,5,46,4,12,3,65,3,-15,2],
    [-32,5,66,4,37,3,93,3,11,2],
    [-32,5,84,4,-2,3,38,3,-13,2],
    [-32,5,96,4,5,3,83,3,54,2],
    [-31,5,-63,4,-35,3,26,3,86,2],
    [-31,5,-53,4,-59,3,17,3,-2,2],
    [-31,5,-43,4,-72,3,24,3,54,2],
    [-31,5,-34,4,48,3,86,3,-26,2],
    [-31,5,-24,4,4,3,57,3,25,2],
    [-31,5,-14,4,-28,3,83,3,3,2],
    [-31,5,-4,4,-63,3,74,3,32,2],
    [-31,5,6,4,-43,3,-32,3,-67,2],
    [-31,5,17,4,33,3,76,3,63,2],
    [-31,5,33,4,58,3,62,3,9,2],
    [-31,5,47,4,-74,3,-60,3,-59,2],
    [-31,5,64,4,-68,3,21,3,-59,2],
    [-31,5,77,4,-44,3,85,3,-63,2],
    [-31,5,91,4,13,3,98,3,22,2],
    [-30,5,-68,4,27,3,73,3,-34,2],
    [-30,5,-58,4,-26,3,85,3,16,2],
    [-30,5,-48,4,-49,3,45,3,51,2],
    [-30,5,-38,4,-64,3,-47,3,28,2],
    [-30,5,-28,4,-77,3,-15,3,-21,2],
    [-30,5,-19,4,45,3,63,3,-15,2],
    [-30,5,-9,4,-6,3,13,3,-44,2],
    [-30,5,1,4,-52,3,-44,3,89,2],
    [-30,5,12,4,-52,3,83,3,-18,2],
    [-30,5,24,4,-72,3,32,3,-79,2],
    [-30,5,41,4,-62,3,98,3,96,2],
    [-30,5,54,4,-43,3,98,3,72,2],
    [-30,5,71,4,-27,3,-11,3,-80,2],
    [-30,5,83,4,-36,3,67,3,19,2],
    [-30,5,94,4,-3,3,18,3,-77,2],
    [-29,5,-64,4,-23,3,17,3,35,2],
    [-29,5,-53,4,-66,3,32,3,-41,2],
    [-29,5,-43,4,14,3,95,3,65,2],
    [-29,5,-32,4,-40,3,21,3,87,2],
    [-29,5,-21,4,-77,3,25,3,-23,2],
    [-29,5,-11,4,-28,3,-25,3,81,2],
    [-29,5,-1,4,61,3,66,3,-74,2],
    [-29,5,12,4,23,3,42,3,-64,2],
    [-29,5,25,4,-21,3,91,3,-36,2],
    [-29,5,45,4,3,3,81,3,32,2],
    [-29,5,65,4,23,3,33,3,-45,2],
    [-29,5,83,4,6,3,22,3,-34,2],
    [-29,5,95,4,36,3,56,3,-73,2],
    [-28,5,-62,4,5,3,41,3,-56,2],
    [-28,5,-51,4,53,3,95,3,-65,2],
    [-28,5,-39,4,-76,3,54,3,-63,2],
    [-28,5,-27,4,-75,3,64,3,-87,2],
    [-28,5,-16,4,-64,3,-7,3,98,2],
    [-28,5,-5,4,-50,3,-49,3,43,2],
    [-28,5,6,4,-63,3,32,3,-52,2],
    [-28,5,22,4,-57,3,73,3,-44,2],
    [-28,5,51,4,-66,3,25,3,-83,2],
    [-28,5,74,4,-69,3,-6,3,49,2],
    [-28,5,87,4,-26,3,91,3,49,2],
    [-27,5,-68,4,-74,3,33,3,-82,2],
    [-27,5,-56,4,-60,3,-34,3,61,2],
    [-27,5,-45,4,-41,3,52,3,97,2],
    [-27,5,-34,4,-19,3,91,3,68,2],
    [-27,5,-23,4,38,3,87,3,-16,2],
    [-27,5,-11,4,-76,3,-42,3,94,2],
    [-27,5,1,4,-79,3,-35,3,7,2],
    [-27,5,13,4,-28,3,83,3,95,2],
    [-27,5,41,4,-76,3,7,3,-85,2],
    [-27,5,72,4,16,3,62,3,43,2],
    [-27,5,86,4,-48,3,28,3,-54,2],
    [-26,5,-70,4,17,3,95,3,37,2],
    [-26,5,-58,4,-79,3,18,3,13,2],
    [-26,5,-47,4,-54,3,-50,3,-15,2],
    [-26,5,-35,4,-41,3,-3,3,-60,2],
    [-26,5,-24,4,-33,3,93,3,-31,2],
    [-26,5,-13,4,-7,3,85,3,89,2],
    [-26,5,-2,4,16,3,47,3,5,2],
    [-26,5,12,4,-57,3,22,3,-11,2],
    [-26,5,32,4,-20,3,81,3,-42,2],
    [-26,5,71,4,-69,3,28,3,97,2],
    [-26,5,84,4,-12,3,48,3,75,2],
    [-26,5,97,4,-45,3,82,3,-4,2],
    [-25,5,-60,4,-42,3,21,3,29,2],
    [-25,5,-49,4,-21,3,28,3,53,2],
    [-25,5,-38,4,73,3,76,3,82,2],
    [-25,5,-26,4,-73,3,-34,3,42,2],
    [-25,5,-14,4,-70,3,66,3,-49,2],
    [-25,5,-3,4,-66,3,-53,3,-59,2],
    [-25,5,7,4,-12,3,87,3,4,2],
    [-25,5,27,4,52,3,58,3,13,2],
    [-25,5,66,4,-36,3,92,3,-51,2],
    [-25,5,83,4,-79,3,-4,3,-38,2],
    [-25,5,95,4,22,3,42,3,-27,2],
    [-24,5,-62,4,41,3,88,3,46,2],
    [-24,5,-50,4,-76,3,-19,3,94,2],
    [-24,5,-39,4,-62,3,5,3,86,2],
    [-24,5,-28,4,-49,3,97,3,45,2],
    [-24,5,-17,4,-29,3,56,3,-83,2],
    [-24,5,-6,4,-19,3,7,3,72,2],
    [-24,5,6,4,-62,3,37,3,-67,2],
    [-24,5,26,4,-59,3,-30,3,42,2],
    [-24,5,65,4,-76,3,-33,3,78,2],
    [-24,5,81,4,-1,3,5,3,-10,2],
    [-24,5,94,4,-11,3,35,3,-56,2],
    [-23,5,-64,4,-8,3,45,3,-70,2],
    [-23,5,-52,4,46,3,85,3,-16,2],
    [-23,5,-40,4,-75,3,-64,3,-61,2],
    [-23,5,-29,4,-71,3,35,3,-90,2],
    [-23,5,-18,4,-59,3,-11,3,-46,2],
    [-23,5,-7,4,-48,3,71,3,49,2],
    [-23,5,5,4,-70,3,-17,3,67,2],
    [-23,5,24,4,-72,3,-38,3,34,2],
    [-23,5,47,4,-80,3,-16,3,-64,2],
    [-23,5,72,4,7,3,35,3,48,2],
    [-23,5,86,4,-39,3,-12,3,-50,2],
    [-22,5,-70,4,43,3,58,3,-13,2],
    [-22,5,-59,4,-41,3,26,3,-72,2],
    [-22,5,-48,4,-74,3,35,3,69,2],
    [-22,5,-38,4,1,3,84,3,23,2],
    [-22,5,-27,4,-48,3,82,3,-89,2],
    [-22,5,-17,4,78,3,95,3,18,2],
    [-22,5,-6,4,-45,3,74,3,-30,2],
    [-22,5,5,4,-38,3,35,3,24,2],
    [-22,5,17,4,5,3,28,3,-58,2],
    [-22,5,37,4,28,3,97,3,75,2],
    [-22,5,57,4,83,3,96,3,25,2],
    [-22,5,76,4,-71,3,94,3,-60,2],
    [-22,5,91,4,-14,3,95,3,-66,2],
    [-21,5,-68,4,-55,3,-22,3,-7,2],
    [-21,5,-58,4,-80,3,-52,3,-65,2],
    [-21,5,-49,4,15,3,62,3,-75,2],
    [-21,5,-39,4,-4,3,8,3,64,2],
    [-21,5,-29,4,-27,3,-20,3,-8,2],
    [-21,5,-19,4,-48,3,42,3,-78,2],
    [-21,5,-9,4,-71,3,-34,3,4,2],
    [-21,5,1,4,12,3,15,3,19,2],
    [-21,5,12,4,23,3,98,3,-54,2],
    [-21,5,25,4,-12,3,48,3,-67,2],
    [-21,5,42,4,7,3,72,3,-5,2],
    [-21,5,55,4,35,3,77,3,59,2],
    [-21,5,71,4,53,3,57,3,-25,2],
    [-21,5,83,4,37,3,68,3,81,2],
    [-21,5,95,4,-64,3,14,3,-37,2],
    [-20,5,-65,4,-43,3,-9,3,72,2],
    [-20,5,-55,4,-80,3,92,3,61,2],
    [-20,5,-46,4,-6,3,-5,3,44,2],
    [-20,5,-36,4,-41,3,43,3,2,2],
    [-20,5,-26,4,-71,3,63,3,47,2],
    [-20,5,-17,4,5,3,66,3,73,2],
    [-20,5,-7,4,-52,3,-39,3,74,2],
    [-20,5,2,4,-7,3,87,3,-76,2],
    [-20,5,13,4,4,3,36,3,21,2],
    [-20,5,26,4,-34,3,68,3,31,2],
    [-20,5,43,4,-31,3,47,3,-82,2],
    [-20,5,56,4,-27,3,16,3,92,2],
    [-20,5,72,4,-35,3,27,3,-90,2],
    [-20,5,84,4,-57,3,25,3,61,2],
    [-20,5,95,4,-48,3,-15,3,-6,2],
    [-19,5,-64,4,-65,3,23,3,-41,2],
    [-19,5,-54,4,-12,3,95,3,-61,2],
    [-19,5,-43,4,-57,3,46,3,-26,2],
    [-19,5,-33,4,11,3,84,3,-52,2],
    [-19,5,-22,4,-58,3,83,3,-88,2],
    [-19,5,-12,4,-20,3,13,3,-47,2],
    [-19,5,-2,4,34,3,94,3,-1,2],
    [-19,5,11,4,-35,3,-22,3,-62,2],
    [-19,5,31,4,-65,3,-17,3,11,2],
    [-19,5,51,4,-68,3,2,3,92,2],
    [-19,5,66,4,-63,3,-60,3,78,2],
    [-19,5,82,4,-79,3,16,3,26,2],
    [-19,5,94,4,-62,3,-20,3,-45,2],
    [-18,5,-65,4,-16,3,21,3,87,2],
    [-18,5,-54,4,14,3,32,3,-70,2],
    [-18,5,-42,4,-70,3,73,3,45,2],
    [-18,5,-31,4,-62,3,-5,3,-33,2],
    [-18,5,-20,4,-67,3,-49,3,32,2],
    [-18,5,-10,4,51,3,98,3,-80,2],
    [-18,5,2,4,-19,3,-14,3,91,2],
    [-18,5,21,4,-59,3,73,3,41,2],
    [-18,5,44,4,-77,3,6,3,74,2],
    [-18,5,66,4,3,3,25,3,29,2],
    [-18,5,83,4,-46,3,-41,3,-2,2],
    [-18,5,96,4,-70,3,62,3,-84,2],
    [-17,5,-62,4,-70,3,22,3,-85,2],
    [-17,5,-51,4,-60,3,24,3,35,2],
    [-17,5,-40,4,-48,3,-34,3,24,2],
    [-17,5,-29,4,-45,3,92,3,78,2],
    [-17,5,-18,4,-56,3,33,3,-84,2],
    [-17,5,-6,4,-73,3,-4,3,-40,2],
    [-17,5,4,4,8,3,43,3,-12,2],
    [-17,5,31,4,-6,3,3,3,44,2],
    [-17,5,63,4,-50,3,97,3,45,2],
    [-17,5,76,4,72,3,81,3,-58,2],
    [-17,5,92,4,66,3,72,3,-2,2],
    [-16,5,-66,4,-23,3,53,3,-77,2],
    [-16,5,-55,4,1,3,66,3,-49,2],
    [-16,5,-43,4,-79,3,-50,3,-30,2],
    [-16,5,-32,4,-68,3,-31,3,18,2],
    [-16,5,-21,4,-68,3,1,3,94,2],
    [-16,5,-11,4,78,3,86,3,-39,2],
    [-16,5,1,4,-18,3,-5,3,-88,2],
    [-16,5,21,4,-76,3,77,3,31,2],
    [-16,5,52,4,-40,3,17,3,32,2],
    [-16,5,72,4,85,3,96,3,-15,2],
    [-16,5,86,4,-38,3,-2,3,76,2],
    [-15,5,-70,4,16,3,81,3,-76,2],
    [-15,5,-60,4,62,3,87,3,4,2],
    [-15,5,-48,4,-69,3,-50,3,-28,2],
    [-15,5,-37,4,-43,3,-32,3,-85,2],
    [-15,5,-26,4,-37,3,86,3,-53,2],
    [-15,5,-14,4,-52,3,-19,3,67,2],
    [-15,5,-3,4,-71,3,16,3,-11,2],
    [-15,5,7,4,-41,3,87,3,-83,2],
    [-15,5,41,4,-19,3,-18,3,-70,2],
    [-15,5,66,4,-78,3,-50,3,-31,2],
    [-15,5,82,4,-17,3,22,3,-76,2],
    [-15,5,95,4,-42,3,47,3,33,2],
    [-14,5,-63,4,-50,3,-15,3,-89,2],
    [-14,5,-52,4,-30,3,27,3,-21,2],
    [-14,5,-41,4,-11,3,85,3,-42,2],
    [-14,5,-30,4,-6,3,-3,3,1,2],
    [-14,5,-19,4,-15,3,16,3,-3,2],
    [-14,5,-8,4,-39,3,97,3,84,2],
    [-14,5,4,4,-76,3,-29,3,92,2],
    [-14,5,27,4,58,3,78,3,-35,2],
    [-14,5,62,4,-32,3,16,3,3,2],
    [-14,5,76,4,-60,3,64,3,-74,2],
    [-14,5,92,4,-53,3,-5,3,98,2],
    [-13,5,-67,4,34,3,71,3,-89,2],
    [-13,5,-56,4,-70,3,-59,3,28,2],
    [-13,5,-45,4,-39,3,-18,3,-7,2],
    [-13,5,-34,4,-11,3,18,3,-14,2],
    [-13,5,-22,4,-16,3,81,3,-54,2],
    [-13,5,-11,4,-47,3,-30,3,85,2],
    [-13,5,1,4,-73,3,-31,3,-90,2],
    [-13,5,16,4,-31,3,-26,3,75,2],
    [-13,5,45,4,-67,3,88,3,-85,2],
    [-13,5,64,4,26,3,94,3,35,2],
    [-13,5,81,4,-21,3,-15,3,96,2],
    [-13,5,94,4,-38,3,64,3,89,2],
    [-12,5,-65,4,28,3,77,3,53,2],
    [-12,5,-55,4,-50,3,-25,3,-66,2],
    [-12,5,-44,4,-78,3,-3,3,-47,2],
    [-12,5,-34,4,-20,3,5,3,-31,2],
    [-12,5,-23,4,-70,3,-62,3,56,2],
    [-12,5,-13,4,-44,3,97,3,-67,2],
    [-12,5,-3,4,-20,3,36,3,79,2],
    [-12,5,13,4,-66,3,56,3,64,2],
    [-12,5,27,4,38,3,76,3,-81,2],
    [-12,5,47,4,24,3,63,3,-87,2],
    [-12,5,65,4,5,3,57,3,-39,2],
    [-12,5,81,4,-7,3,62,3,-30,2],
    [-12,5,93,4,33,3,78,3,39,2],
    [-11,5,-66,4,-43,3,-12,3,56,2],
    [-11,5,-58,4,16,3,26,3,35,2],
    [-11,5,-48,4,-26,3,55,3,73,2],
    [-11,5,-38,4,-53,3,87,3,54,2],
    [-11,5,-28,4,-75,3,-24,3,-68,2],
    [-11,5,-19,4,2,3,84,3,-88,2],
    [-11,5,-9,4,-55,3,-54,3,66,2],
    [-11,5,1,4,16,3,48,3,57,2],
    [-11,5,13,4,4,3,55,3,-64,2],
    [-11,5,26,4,-39,3,36,3,-33,2],
    [-11,5,43,4,-42,3,76,3,-27,2],
    [-11,5,56,4,-33,3,23,3,-73,2],
    [-11,5,71,4,-40,3,4,3,-42,2],
    [-11,5,83,4,-57,3,-12,3,-25,2],
    [-11,5,94,4,-42,3,-39,3,-76,2],
    [-10,5,-66,4,-41,3,16,3,81,2],
    [-10,5,-58,4,-13,3,4,3,-53,2],
    [-10,5,-48,4,-64,3,-26,3,-4,2],
    [-10,5,-39,4,15,3,45,3,-68,2],
    [-10,5,-29,4,-44,3,-33,3,-57,2],
    [-10,5,-19,4,-79,3,-75,3,-68,2],
    [-10,5,-11,4,-39,3,87,3,23,2],
    [-10,5,-2,4,6,3,45,3,-38,2],
    [-10,5,11,4,-46,3,88,3,8,2],
    [-10,5,23,4,44,3,85,3,-12,2],
    [-10,5,36,4,-4,3,55,3,-48,2],
    [-10,5,53,4,-37,3,-11,3,-35,2],
    [-10,5,65,4,-61,3,13,3,89,2],
    [-10,5,77,4,-76,3,36,3,57,2],
    [-10,5,91,4,-51,3,-14,3,-64,2],
    [-9,5,-69,4,-74,3,-27,3,54,2],
    [-9,5,-60,4,-48,3,82,3,-2,2],
    [-9,5,-51,4,5,3,13,3,55,2],
    [-9,5,-40,4,-63,3,-21,3,-5,2],
    [-9,5,-30,4,-25,3,1,3,89,2],
    [-9,5,-20,4,22,3,52,3,79,2],
    [-9,5,-10,4,45,3,92,3,82,2],
    [-9,5,1,4,56,3,64,3,35,2],
    [-9,5,15,4,6,3,11,3,-71,2],
    [-9,5,35,4,-32,3,64,3,-67,2],
    [-9,5,55,4,-53,3,-51,3,-17,2],
    [-9,5,71,4,-79,3,91,3,-28,2],
    [-9,5,83,4,-11,3,87,3,-27,2],
    [-9,5,95,4,-30,3,36,3,-45,2],
    [-8,5,-63,4,-70,3,14,3,-26,2],
    [-8,5,-53,4,-64,3,-51,3,-32,2],
    [-8,5,-42,4,-50,3,55,3,-86,2],
    [-8,5,-31,4,-49,3,56,3,45,2],
    [-8,5,-20,4,-64,3,53,3,-62,2],
    [-8,5,-10,4,4,3,91,3,-17,2],
    [-8,5,2,4,-61,3,43,3,89,2],
    [-8,5,24,4,-72,3,-49,3,73,2],
    [-8,5,52,4,-20,3,41,3,49,2],
    [-8,5,66,4,-71,3,-64,3,29,2],
    [-8,5,82,4,-22,3,-5,3,89,2],
    [-8,5,95,4,-60,3,88,3,-44,2],
    [-7,5,-63,4,-80,3,38,3,-79,2],
    [-7,5,-53,4,-78,3,28,3,-90,2],
    [-7,5,-42,4,-67,3,92,3,8,2],
    [-7,5,-31,4,-66,3,-14,3,92,2],
    [-7,5,-20,4,-76,3,-58,3,97,2],
    [-7,5,-10,4,-19,3,57,3,-65,2],
    [-7,5,2,4,-76,3,-10,3,41,2],
    [-7,5,32,4,76,3,95,3,-10,2],
    [-7,5,57,4,-45,3,8,3,11,2],
    [-7,5,73,4,32,3,94,3,-83,2],
    [-7,5,87,4,-64,3,44,3,-50,2],
    [-6,5,-69,4,-56,3,-1,3,47,2],
    [-6,5,-59,4,-61,3,37,3,17,2],
    [-6,5,-49,4,-50,3,-5,3,-44,2],
    [-6,5,-38,4,-35,3,64,3,-42,2],
    [-6,5,-27,4,-34,3,51,3,-82,2],
    [-6,5,-15,4,-61,3,88,3,73,2],
    [-6,5,-5,4,2,3,41,3,-67,2],
    [-6,5,17,4,-72,3,-70,3,-28,2],
    [-6,5,51,4,-66,3,-45,3,-29,2],
    [-6,5,64,4,-17,3,91,3,61,2],
    [-6,5,81,4,-60,3,88,3,4,2],
    [-6,5,93,4,23,3,85,3,59,2],
    [-5,5,-65,4,-43,3,92,3,61,2],
    [-5,5,-55,4,-41,3,67,3,-12,2],
    [-5,5,-44,4,-22,3,1,3,-82,2],
    [-5,5,-33,4,-14,3,56,3,-75,2],
    [-5,5,-22,4,-26,3,91,3,-57,2],
    [-5,5,-11,4,-60,3,71,3,54,2],
    [-5,5,-1,4,-10,3,84,3,-79,2],
    [-5,5,31,4,-69,3,37,3,74,2],
    [-5,5,55,4,-44,3,32,3,37,2],
    [-5,5,71,4,32,3,38,3,-54,2],
    [-5,5,85,4,-57,3,6,3,-48,2],
    [-5,5,97,4,-24,3,-20,3,11,2],
    [-4,5,-61,4,-32,3,-19,3,-82,2],
    [-4,5,-51,4,-21,3,-12,3,39,2],
    [-4,5,-40,4,-18,3,8,3,84,2],
    [-4,5,-29,4,-22,3,82,3,-36,2],
    [-4,5,-18,4,-33,3,11,3,-58,2],
    [-4,5,-7,4,-67,3,98,3,58,2],
    [-4,5,15,4,-49,3,-40,3,-36,2],
    [-4,5,46,4,-13,3,-8,3,2,2],
    [-4,5,63,4,-79,3,-21,3,82,2],
    [-4,5,76,4,-16,3,84,3,-39,2],
    [-4,5,92,4,-36,3,84,3,-60,2],
    [-3,5,-67,4,55,3,73,3,6,2],
    [-3,5,-57,4,68,3,83,3,41,2],
    [-3,5,-46,4,-67,3,-55,3,53,2],
    [-3,5,-35,4,-50,3,4,3,52,2],
    [-3,5,-24,4,-48,3,96,3,25,2],
    [-3,5,-12,4,-69,3,-68,3,-19,2],
    [-3,5,-2,4,-29,3,65,3,51,2],
    [-3,5,17,4,37,3,73,3,-40,2],
    [-3,5,46,4,-54,3,-8,3,94,2],
    [-3,5,62,4,16,3,72,3,-61,2],
    [-3,5,76,4,-32,3,-20,3,-81,2],
    [-3,5,92,4,-48,3,84,3,73,2],
    [-2,5,-67,4,-36,3,92,3,5,2],
    [-2,5,-58,4,-6,3,74,3,51,2],
    [-2,5,-48,4,-70,3,-11,3,-50,2],
    [-2,5,-38,4,-20,3,85,3,-89,2],
    [-2,5,-27,4,-74,3,-33,3,15,2],
    [-2,5,-17,4,-53,3,92,3,-60,2],
    [-2,5,-7,4,-48,3,28,3,24,2],
    [-2,5,6,4,-69,3,-28,3,96,2],
    [-2,5,25,4,-58,3,74,3,-37,2],
    [-2,5,45,4,-76,3,-50,3,66,2],
    [-2,5,57,4,15,3,75,3,73,2],
    [-2,5,73,4,-21,3,23,3,-36,2],
    [-2,5,86,4,-64,3,-40,3,98,2],
    [-2,5,97,4,3,3,17,3,-33,2],
    [-1,5,-62,4,-69,3,44,3,4,2],
    [-1,5,-54,4,-39,3,81,3,-77,2],
    [-1,5,-46,4,28,3,77,3,4,2],
    [-1,5,-36,4,-35,3,-29,3,-70,2],
    [-1,5,-26,4,-74,3,15,3,99,2],
    [-1EM,5,-17,4,-30,3,55,3,32,2],
    [-1,5,-8,4,44,3,75,3,79,2],
    [-1,5,4,4,-79,3,96,3,49,2],
    [-1,5,16,4,-79,3,-70,3,-33,2],
    [-1,5,32,4,-8,3,52,3,42,2],
    [-1,5,45,4,-43,3,-39,3,-65,2],
    [-1,5,57,4,-67,3,44,3,-54,2],
    [-1,5,71,4,55,3,68,3,64,2],
    [-1,5,83,4,-19,3,94,3,-54,2],
    [-1,5,94,4,-22,3,67,3,19,2],
    [1,5,-66,4,-28,3,55,3,39,2],
    [1,5,-58,4,24,3,62,3,94,2],
    [1,5,-49,4,-55,3,38,3,27,2],
    [1,5,-41,4,76,3,84,3,81,2],
    [1,5,-32,4,-21,3,74,3,-80,2],
    [1,5,-23,4,-70,3,17,3,14,2],
    [1,5,-15,4,-37,3,-23,3,-89,2],
    [1,5,-7,4,-12,3,42,3,93,2],
    [1,5,15,4,-38,3,24,3,-20,2],
    [1,5,26,4,64,3,87,3,-72,2],
    [1,5,41,4,7,3,87,3,15,2],
    [1,5,53,4,-28,3,67,3,-49,2],
    [1,5,65,4,-44,3,13,3,77,2],
    [1EM,5,77,4,-63,3,18,3,-66,2],
    [1,5,91,4,-41,3,-7,3,29,2],
    [2,5,-69,4,-72,3,13,3,62,2],
    [2,5,-61,4,-11,3,88,3,83,2],
    [2,5,-52,4,-46,3,77,3,84,2],
    [2,5,-43,4,-74,3,45,3,26,2],
    [2,5,-35,4,13,3,23,3,57,2],
    [2,5,-26,4,-40,3,72,3,38,2],
    [2,5,-17,4,-74,3,-66,3,-25,2],
    [2,5,-9,4,-35,3,23,3,-51,2],
    [2,5,14,4,-40,3,27,3,-13,2],
    [2,5,25,4,74,3,87,3,83,2],
    [2,5,37,4,61,3,96,3,-26,2],
    [2,5,52,4,45,3,66,3,-17,2],
    [2,5,64,4,44,3,72,3,85,2],
    [2,5,76,4,48,3,83,3,68,2],
    [2,5,91,4,-43,3,46,3,7,2],
    [3,5,-69,4,-60,3,42,3,32,2],
    [3,5,-61,4,64,3,85,3,78,2],
    [3,5,-52,4,18,3,44,3,-39,2],
    [3,5,-43,4,-16,3,64,3,-46,2],
    [3,5,-34,4,-36,3,98,3,-11,2],
    [3,5,-25,4,-54,3,61,3,16,2],
    [3,5,-16,4,-75,3,-28,3,-77,2],
    [3,5,-8,4,-29,3,32,3,64,2],
    [3,5,16,4,-14,3,67,3,81,2],
    [3,5,31,4,-49,3,66,3,47,2],
    [3,5,43,4,-29,3,95,3,-1,2],
    [3,5,55,4,-9,3,88,3,-37,2],
    [3,5,67,4,25,3,86,3,1,2],
    [3,5,82,4,25,3,68,3,18,2],
    [3,5,94,4,-62,3,-14,3,-68,2],
    [4,5,-66,4,-42,3,68,3,81,2],
    [4,5,-57,4,-76,3,-69,3,71,2],
    [4,5,-49,4,15,3,45,3,12,2],
    [4,5,-40,4,-2,3,56,3,-41,2],
    [4,5,-31,4,-3,3,86,3,57,2],
    [4,5,-22,4,-24,3,36,3,55,2],
    [4,5,-13,4,-60,3,92,3,-71,2],
    [4,5,11,4,-38,3,73,3,85,2],
    [4,5,22,4,28,3,67,3,54,2],
    [4MY,5,34,4,11,3,96,3,65,2],
    [4,5,46,4,37,3,54,3,-73,2],
    [4,5,61,4,73,3,82,3,-60,2],
    [4,5,74,4,-68,3,13,3,-9,2],
    [4,5,86,4,-80,3,-50,3,16,2],
    [4,5,97,4,-70,3,83,3,43,2],
    [5,5,-63,4,-31,3,42,3,-14,2],
    [5,5,-54,4,-75,3,96,3,-21,2],
    [5,5,-46,4,-11,3,94,3,32,2],
    [5,5,-37,4,-45,3,22,3,-42,2],
    [5,5,-28,4,-72,3,-49,3,-83,2],
    [5,5,-20,4,23,3,58,3,-17,2],
    [5,5,-11,4,-39,3,78,3,15,2],
    [5,5,12,4,-37,3,28,3,65,2],
    [5,5,23,4,27,3,61,3,79,2],
    [5,5,35,4,-21,3,12,3,87,2],
    [5,5,47,4,-20,3,74,3,13,2],
    [5,5,47,4,-18,3,23,3,91,2],
    [5,5,62,4,-23,3,58,3,27,2],
    [5,5,74,4,-21,3,2,3,56,2],
    [5,5,86,4,-51,3,32,3,95,2],
    [5,5,97,4,-59,3,-20,3,23,2],
    [6,5,-63,4,-32,3,11,3,66,2],
    [6,5,-55,4,27,3,56,3,-50,2],
    [6,5,-46,4,-54,3,21,3,-89,2],
    [6,5,-38,4,15,3,33,3,-89,2],
    [6,5,-29,4,-54,3,45,3,-56,2],
    [6,5,-21,4,66,3,95,3,29,2],
    [6,5,-12,4,-47,3,-28,3,36,2],
    [6,5,2,4,-48,3,78,3,-17,2],
    [6,5,21,4,-55,3,94,3,72,2],
    [6,5,32,4,56,3,87,3,16,2],
    [6,5,44,4,12,3,85,3,32,2],
    [6,5,56,4,-23,3,98,3,95,2],
    [6,5,71,4,-43,3,-29,3,-42,2],
    [6,5,83,4,-80,3,-68,3,52,2],
    [6,5,94,4,-72,3,-15,3,28,2],
    [11,5,-66,4,-42,3,22,3,73,2],
    [11,5,-57,4,-8,3,61,3,-80,2],
    [11,5,-47,4,-68,3,-63,3,-84,2],
    [11,5,-38,4,-20,3,41,3,99,2],
    [11,5,-28,4,-72,3,31,3,46,2],
    [11,5,-19,4,-42,3,6,3,-72,2],
    [11,5,1,4,-22,3,97,3,-64,2],
    [11,5,21,4,-79,3,95,3,-38,2],
    [11,5,33,4,-70,3,76,3,51,2],
    [11,5,45,4,58,3,85,3,-81,2],
    [11,5,61,4,3,3,84,3,46,2],
    [11,5,74,4,-27,3,96,3,-25,2],
    [11,5,87,4,-75,3,48,3,37,2],
    [12,5,-70,4,-29,3,74,3,-8,2],
    [12,5,-60,4,-76,3,-65,3,28,2],
    [12,5,-51,4,-10,3,36,3,-7,2],
    [12,5,-41,4,-42,3,2,3,56,2],
    [12,5,-31,4,-70,3,95,3,-44,2],
    [12,5,-22,4,1,3,64,3,9,2],
    [12,5,-8,4,43,3,47,3,58,2],
    [12,5,7,4,-62,3,98,3,55,2],
    [12,5,31,4,-54,3,43,3,52,2],
    [12,5,44,4,-70,3,-61,3,-23,2],
    [12,5,57,4,-69,3,35,3,86,2],
    [12,5,73,4,-62,3,5,3,89,2],
    [12,5,85,4,47,3,97,3,5,2],
    [12,5,97,4,4,3,93,3,-71,2],
    [13,5,-61,4,-52,3,28,3,65,2],
    [13,5,-51,4,-74,3,34,3,57,2],
    [13,5,-42,4,78,3,97,3,-51,2],
    [13,5,-32,4,21,3,28,3,-10,2],
    [13,5,-22,4,-36,3,24,3,-84,2],
    [13,5,-8,4,-19,3,25,3,-35,2],
    [13,5,7,4,-71,3,41,3,18,2],
    [13,5,32,4,-55,3,24,3,27,2],
    [13,5,45,4,-58,3,24,3,-55,2],
    [13,5,61,4,-33,3,27,3,-74,2],
    [13,5,74,4,-10,3,36,3,-9,2],
    [13,5,87,4,-39,3,35,3,-68,2],
    [14,5,-69,4,-58,3,-53,3,11,2],
    [14,5,-60,4,33,3,91,3,23,2],
    [14,5,-50,4,-19,3,-2,3,-49,2],
    [14,5,-40,4,-32,3,78,3,27,2],
    [14,5,-30,4,-51,3,1,3,-52,2],
    [14,5,-20,4,-71,3,-60,3,48,2],
    [14,5,-1,4,-61,3,-47,3,-76,2],
    [14,5,21,4,-9,3,91,3,82,2],
    [14,5,34,4,-74,3,62,3,-10,2],
    [14,5,47,4,-74,3,-3,3,96,2],
    [14,5,63,4,-61,3,21,3,-10,2],
    [14,5,76,4,-36,3,91,3,34,2],
    [14,5,91,4,86,3,97,3,44,2],
    [15,5,-68,4,42,3,84,3,47,2],
    [15,5,-58,4,-53,3,24,3,-44,2],
    [15,5,-49,4,66,3,93,3,29,2],
    [15,5,-39,4,-4,3,64,3,-46,2],
    [15,5,-29,4,-50,3,-28,3,51,2],
    [15,5,-20,4,63,3,76,3,-80,2],
    [15,5,1,4,-73,3,21,3,9,2],
    [15,5,21,4,-41,3,5,3,-59,2],
    [15,5,33,4,38,3,46,3,-62,2],
    [15,5,46,4,-1,3,55,3,78,2],
    [15,5,62,4,-4,3,81,3,45,2],
    [15,5,75,4,2,3,63,3,-61,2],
    [15,5,91,4,-58,3,-1,3,-73,2],
    [16,5,-69,4,45,3,73,3,67,2],
    [16,5,-59,4,-65,3,-32,3,-38,2],
    [16,5,-50,4,-13,3,47,3,28,2],
    [16,5,-40,4,-63,3,23,3,-36,2],
    [16,5,-31,4,5,3,94,3,12,2],
    [16,5,-21,4,-67,3,-42,3,-33,2],
    [16,5,-2,4,-43,3,-30,3,57,2],
    [16,5,7,4,-3,3,73,3,-58,2],
    [16,5,27,4,5,3,96,3,68,2],
    [16,5,43,4,-59,3,24,3,87,2],
    [16,5,56,4,-70,3,51,3,21,2],
    [16,5,71,4,53,3,92,3,1,2],
    [16,5,84,4,-28,3,81,3,-60,2],
    [16,5,96,4,-50,3,45,3,81,2],
    [21,5,-62,4,-71,3,68,3,-50,2],
    [21,5,-52,4,-61,3,26,3,-63,2],
    [21,5,-42,4,-39,3,-33,3,2,2],
    [21,5,-32,4,-17,3,66,3,33,2],
    [21,5,-17,4,-29,3,54,3,71,2],
    [21,5,4,4,-72,3,33,3,-56,2],
    [21,5,16,4,-66,3,-27,3,33,2],
    [21,5,37,4,-74,3,13,3,41,2],
    [21,5,53,4,-39,3,73,3,64,2],
    [21,5,67,4,-74,3,77,3,2,2],
    [21,5,83,4,-31,3,56,3,94,2],
    [21,5,96,4,-69,3,55,3,-36,2],
    [22,5,-62,4,-68,3,-32,3,-70,2],
    [22,5,-52,4,-40,3,8,3,-64,2],
    [22,5,-42,4,45,3,85,3,-57,2],
    [22,5,-31,4,-65,3,-32,3,-17,2],
    [22,5,-11,4,-63,3,75,3,-82,2],
    [22,5,4,4,-33,3,34,3,1,2],
    [22,5,16,4,8,3,74,3,-69,2],
    [22,5,41,4,5,3,61,3,13,2],
    [22,5,55,4,-54,3,92,3,32,2],
    [22,5,72,4,-68,3,58,3,-43,2],
    [22,5,85,4,3,3,94,3,-33,2],
    [23,5,-70,4,-62,3,5,3,-3,2],
    [23,5,-60,4,-35,3,46,3,-66,2],
    [23,5,-50,4,85,3,94,3,74,2],
    [23,5,-39,4,-31,3,84,3,47,2],
    [23,5,-28,4,-75,3,18,3,32,2],
    [23,5,-9,4,77,3,81,3,-28,2],
    [23,5,7,4,-60,3,-33,3,-28,2],
    [23,5,32,4,1,3,77,3,43,2],
    [23,5,45,4,56,3,84,3,-77,2],
    [23,5,62,4,32,3,83,3,-56,2],
    [23,5,76,4,42,3,48,3,-21,2],
    [23,5,93,4,-77,3,68,3,33,2],
    [24,5,-66,4,46,3,58,3,52,2],
    [24,5,-55,4,-52,3,-30,3,19,2],
    [24,5,-45,4,58,3,83,3,-21,2],
    [24,5,-34,4,-42,3,37,3,2,2],
    [24,5,-19,4,-31,3,-1,3,95,2],
    [24,5,2,4,-57,3,-30,3,33,2],
    [24,5,14,4,-34,3,-23,3,-29,2],
    [24,5,37,4,-64,3,-41,3,82,2],
    [24,5,53,4,35,3,58,3,46,2],
    [24,5,67,4,38,3,71,3,-81,2],
    [24,5,84,4,-13,3,-12,3,41,2],
    [24,5,97,4,-47,3,-2,3,36,2],
    [25,5,-61,4,-33,3,14,3,9,2],
    [25,5,-51,4,35,3,76,3,-23,2],
    [25,5,-40,4,-59,3,-1,3,23,2],
    [25,5,-30,4,-32,3,-23,3,-62,2],
    [25,5,-10,4,-36,3,67,3,12,2],
    [25,5,5,4,77,3,87,3,36,2],
    [25,5,21,4,-68,3,97,3,-50,2],
    [25,5,43,4,-63,3,33,3,-52,2],
    [25,5,56,4,43,3,82,3,-13,2],
    [25,5,73,4,3,3,15,3,19,2],
    [25,5,87,4,-61,3,94,3,77,2],
    [26,5,-69,4,-34,3,56,3,-65,2],
    [26,5,-59,4,-35,3,21,3,1,2],
    [26,5,-49,4,-2,3,45,3,97,2],
    [26,5,-39,4,41,3,86,3,23,2],
    [26,5,-23,4,-61,3,-44,3,-55,2],
    [26,5,-3,4,-55,3,-54,3,-46,2],
    [26,5,7,4,-44,3,23,3,13,2],
    [26,5,22,4,42,3,88,3,34,2],
    [26,5,43,4,53,3,94,3,-7,2],
    [26,5,57,4,-52,3,-2,3,-41,2],
    [26,5,73,4,58,3,88,3,-62,2],
    [26,5,87,4,-59,3,46,3,84,2],
    [31,5,-69,4,-46,3,-7,3,24,2],
    [31,5,-59,4,-50,3,66,3,94,2],
    [31,5,-49,4,-41,3,42,3,86,2],
    [31,5,-39,4,-18,3,64,3,-30,2],
    [31,5,-19,4,5,3,25,3,-69,2],
    [31,5,2,4,-20,3,81,3,-87,2],
    [31,5,14,4,61,3,85,3,76,2],
    [31,5,27,4,18,3,52,3,-82,2],
    [31,5,51,4,3,3,18,3,-65,2],
    [31,5,65,4,-72,3,51,3,-29,2],
    [31,5,81,4,-1,3,28,3,-6,2],
    [31,5,94,4,-51,3,64,3,-81,2],
    [32,5,-64,4,-70,3,-28,3,-5,2],
    [32,5,-54,4,-51,3,23,3,5,2],
    [32,5,-44,4,-6,3,94,3,-1,2],
    [32,5,-29,4,-2,3,64,3,-14,2],
    [32,5,-9,4,-18,3,11,3,-30,2],
    [32,5,7,4,-71,3,65,3,-60,2],
    [32,5,22,4,16,3,37,3,-4,2],
    [32,5,44,4,-7,3,52,3,71,2],
    [32,5,61,4,-78,3,7,3,-70,2],
    [32,5,74,4,28,3,84,3,-46,2],
    [32,5,91,4,-63,3,47,3,-54,2],
    [33,5,-68,4,-10,3,2,3,-48,2],
    [33,5,-57,4,-79,3,54,3,-90,2],
    [33,5,-47,4,-39,3,1,3,-18,2],
    [33,5,-32,4,44,3,98,3,24,2],
    [33,5,-12,4,43,3,83,3,-38,2],
    [33,5,4,4,-50,3,62,3,48,2],
    [33,5,17,4,-70,3,28,3,96,2],
    [33,5,43,4,-75,3,97,3,-32,2],
    [33,5,56,4,-55,3,-54,3,17,2],
    [33,5,73,4,-59,3,47,3,12,2],
    [33,5,86,4,24,3,48,3,45,2],
    [34,5,-69,4,-51,3,62,3,-23,2],
    [34,5,-59,4,-4,3,84,3,2,2],
    [34,5,-48,4,-69,3,-44,3,-14,2],
    [34,5,-33,4,-21,3,76,3,-73,2],
    [34,5,-13,4,-30,3,-22,3,83,2],
    [34,5,3,4,-64,3,-56,3,-11,2],
    [34,5,15,4,65,3,98,3,21,2],
    [34,5,41,4,54,3,76,3,3,2],
    [34,5,55,4,-77,3,-76,3,78,2],
    [34,5,71,4,26,3,47,3,-65,2],
    [34,5,85,4,-19,3,4,3,48,2],
    [35,5,-70,4,-64,3,4,3,-45,2],
    [35,5,-60,4,-53,3,-5,3,-72,2],
    [35,5,-50,4,-12,3,2,3,-78,2],
    [35,5,-40,4,31,3,55,3,99,2],
    [35,5,-20,4,44,3,88,3,12,2],
    [35,5,1,4,-5,3,58,3,52,2],
    [35,5,14,4,-62,3,47,3,-84,2],
    [35,5,27,4,-73,3,-61,3,47,2],
    [35,5,52,4,-78,3,65,3,-20,2],
    [35,5,65,4,-8,3,54,3,71,2],
    [35,5,82,4,-51,3,21,3,-40,2],
    [35,5,95,4,-68,3,55,3,-49,2],
    [36,5,-64,4,52,3,88,3,-65,2],
    [36,5,-54,4,57,3,66,3,-12,2],
    [36,5,-43,4,-79,3,-70,3,-5,2],
    [36,5,-23,4,-66,3,63,3,95,2],
    [36,5,-3,4,-62,3,42,3,-4,2],
    [36,5,7,4,-25,3,-22,3,43,2],
    [36,5,23,4,-52,3,-50,3,-56,2],
    [36,5,44,4,-58,3,41,3,-61,2],
    [36,5,57,4,-61,3,-44,3,-74,2],
    [36,5,73,4,18,3,87,3,-86,2],
    [36,5,87,4,-72,3,-33,3,-42,2],
    [41,5,-69,4,-61,3,47,3,-77,2],
    [41,5,-59,4,-71,3,31,3,-7,2],
    [41,5,-49,4,-72,3,-19,3,-3,2],
    [41,5,-29,4,-60,3,61,3,7,2],
    [41,5,-9,4,-55,3,84,3,47,2],
    [41,5,2,4,-73,3,53,3,-87,2],
    [41,5,14,4,-27,3,53,3,33,2],
    [41,5,27,4,11,3,37,3,25,2],
    [41,5,51,4,-13,3,8,3,1,2],
    [41,5,64,4,-14,3,52,3,-21,2],
    [41,5,81,4,-68,3,-49,3,53,2],
    [41,5,93,4,15,3,67,3,53,2],
    [42,5,-65,4,-37,3,52,3,-88,2],
    [42,5,-55,4,-13,3,77,3,-51,2],
    [42,5,-40,4,-8,3,11,3,-49,2],
    [42,5,-20,4,-5,3,86,3,22,2],
    [42,5,-5,4,-8,3,65,3,53,2],
    [42,5,6,4,-63,3,12,3,96,2],
    [42,5,22,4,-65,3,72,3,-48,2],
    [42,5,35,4,-60,3,83,3,6,2],
    [42,5,57,4,-61,3,85,3,77,2],
    [42,5,73,4,17,3,58,3,-2,2],
    [42,5,87,4,-55,3,-50,3,34,2],
    [43,5,-69,4,-10,3,76,3,91,2],
    [43,5,-59,4,32,3,52,3,-60,2],
    [43,5,-48,4,-62,3,-18,3,-49,2],
    [43,5,-28,4,-64,3,68,3,99,2],
    [43,5,-8,4,-72,3,-31,3,-6,2],
    [43,5,3,4,-70,3,-12,3,-72,2],
    [43,5,16,4,-75,3,-64,3,58,2],
    [43,5,32,4,-41,3,63,3,96,2],
    [43,5,55,4,-60,3,-14,3,96,2],
    [43,5,71,4,8,3,77,3,-51,2],
    [43,5,85,4,-28,3,-7,3,31,2],
    [44,5,-70,4,-71,3,-49,3,-27,2],
    [44,5,-60,4,-55,3,-12,3,26,2],
    [44,5,-50,4,-12,3,-10,3,68,2],
    [44,5,-30,4,-11,3,-2,3,4,2],
    [44,5,-10,4,-21,3,71,3,-19,2],
    [44,5,1,4,-12,3,57,3,-51,2],
    [44,5,14,4,-52,3,36,3,-81,2],
    [44,5,27,4,32,3,92,3,81,2],
    [44,5,53,4,23,3,83,3,-49,2],
    [44,5,67,4,-77,3,-18,3,-88,2],
    [44,5,83,4,15,3,23,3,-33,2],
    [44,5,96,4,-10,3,23,3,86,2],
    [45,5,-62,4,-7,3,24,3,-65,2],
    [45,5,-52,4,13,3,38,3,92,2],
    [45,5,-32,4,17,3,87,3,-23,2],
    [45,5,-12,4,18,3,27,3,-6,2],
    [45,5,-2,4,18,3,28,3,-16,2],
    [45,5,12,4,-69,3,98,3,-65,2],
    [45,5,25,4,-24,3,41,3,-85,2],
    [45,5,41,4,-16,3,76,3,7,2],
    [45,5,63,4,-13,3,82,3,95,2],
    [45,5,77,4,-56,3,2,3,18,2],
    [45,5,93,4,-66,3,-53,3,58,2],
    [46,5,-66,4,-5,3,36,3,13,2],
    [46,5,-56,4,-21,3,58,3,-10,2],
    [46,5,-41,4,7,3,52,3,-28,2],
    [46,5,-21,4,54,3,78,3,97,2],
    [46,5,-6,4,-3,3,55,3,85,2],
    [46,5,5,4,-60,3,-53,3,-55,2],
    [46,5,21,4,-80,3,-74,3,96,2],
    [46,5,34,4,-58,3,64,3,-10,2],
    [46,5,55,4,-65,3,15,3,1,2],
    [46,5,71,4,-65,3,-2,3,53,2],
    [46,5,84,4,-16,3,23,3,6,2],
    [46,5,96,4,81,3,85,3,12,2],
    [51,5,-62,4,12,3,56,3,6,2],
    [51,5,-47,4,-4,3,7,3,83,2],
    [51,5,-27,4,33,3,43,3,-7,2],
    [51,5,-11,4,-80,3,24,3,7,2],
    [51,5,-2,4,35,3,98,3,72,2],
    [51,5,12,4,-77,3,-70,3,61,2],
    [51,5,25,4,-59,3,-40,3,46,2],
    [51,5,41,4,-15,3,-1,3,92,2],
    [51,5,62,4,-39,3,31,3,95,2],
    [51,5,75,4,-20,3,37,3,-50,2],
    [51,5,91,4,-20,3,45,3,43,2],
    [52,5,-68,4,24,3,34,3,86,2],
    [52,5,-58,4,23,3,81,3,-30,2],
    [52,5,-38,4,26,3,94,3,46,2],
    [52,5,-18,4,42,3,58,3,1,2],
    [52,5,-7,4,-80,3,66,3,-73,2],
    [52,5,3,4,38,3,64,3,58,2],
    [52,5,16,4,3,3,12,3,-86,2],
    [52,5,33,4,-62,3,-22,3,-68,2],
    [52,5,46,4,-58,3,27,3,37,2],
    [52,5,71,4,-38,3,87,3,-21,2],
    [52,5,84,4,1,3,5,3,-39,2],
    [52,5,97,4,-50,3,22,3,79,2],
    [53,5,-61,4,-39,3,5,3,23,2],
    [53,5,-41,4,-50,3,-29,3,-1,2],
    [53,5,-21,4,-52,3,43,3,78,2],
    [53,5,-11,4,-12,3,67,3,7,2],
    [53,5,-1,4,22,3,47,3,84,2],
    [53,5,13,4,-39,3,23,3,73,2],
    [53,5,27,4,-70,3,97,3,24,2],
    [53,5,43,4,-21,3,32,3,-18,2],
    [53,5,66,4,-29,3,84,3,-81,2],
    [53,5,82,4,26,3,31,3,24,2],
    [53,5,95,4,6,3,92,3,84,2],
    [54,5,-63,4,5,3,87,3,94,2],
    [54,5,-43,4,-8,3,-3,3,98,2],
    [54,5,-23,4,-7,3,91,3,-84,2],
    [54,5,-12,4,-78,3,-29,3,-7,2],
    [54,5,-2,4,-62,3,-11,3,78,2],
    [54,5,11,4,18,3,62,3,6,2],
    [54,5,25,4,-43,3,87,3,-76,2],
    [54,5,42,4,-80,3,85,3,-16,2],
    [54,5,64,4,41,3,46,3,9,2],
    [54,5,81,4,-59,3,47,3,7,2],
    [54,5,94,4,-61,3,76,3,-1,2],
    [55,5,-65,4,48,3,96,3,26,2],
    [55,5,-50,4,27,3,67,3,-36,2],
    [55,5,-30,4,41,3,93,3,-64,2],
    [55,5,-14,4,-77,3,18,3,-37,2],
    [55,5,-4,4,-67,3,-10,3,32,2],
    [55,5,6,4,18,3,98,3,62,2],
    [55,5,22,4,51,3,62,3,16,2],
    [55,5,36,4,-11,3,17,3,-10,2],
    [55,5,61,4,-13,3,95,3,-30,2],
    [55,5,74,4,-7,3,71,3,-22,2],
    [55,5,87,4,23,3,97,3,6,2],
    [56,5,-68,4,-73,3,-13,3,39,2],
    [56,5,-53,4,-70,3,-21,3,95,2],
    [56,5,-33,4,-61,3,88,3,95,2],
    [56,5,-18,4,-68,3,4,3,44,2],
    [56,5,-8,4,-71,3,73,3,-78,2],
    [56,5,2,4,71,3,81,3,43,2],
    [56,5,15,4,-26,3,-9,3,-39,2],
    [56,5,31,4,48,3,85,3,-11,2],
    [56,5,45,4,-68,3,65,3,-82,2],
    [56,5,66,4,-76,3,-22,3,8,2],
    [56,5,82,4,-79,3,76,3,-28,2],
    [56,5,94,4,-3,3,98,3,11,2],
    [61,5,-59,4,-66,3,-5,3,32,2],
    [61,5,-39,4,-40,3,72,3,21,2],
    [61,5,-24,4,-5,3,88,3,28,2],
    [61,5,-14,4,4,3,7,3,86,2],
    [61,5,-4,4,-3,3,95,3,18,2],
    [61,5,7,4,-76,3,-20,3,74,2],
    [61,5,23,4,-78,3,-77,3,85,2],
    [61,5,36,4,2,3,53,3,-34,2],
    [61,5,52,4,4,3,26,3,-39,2],
    [61,5,73,4,-13,3,68,3,-41,2],
    [61,5,86,4,-19,3,4,3,11,2],
    [62,5,-70,4,7,3,47,3,-43,2],
    [62,5,-50,4,-12,3,55,3,78,2],
    [62,5,-30,4,-6,3,-3,3,21,2],
    [62,5,-20,4,44,3,55,3,-32,2],
    [62,5,-9,4,-71,3,72,3,47,2],
    [62,5,2,4,-57,3,-17,3,54,2],
    [62,5,14,4,53,3,87,3,79,2],
    [62,5,31,4,-17,3,84,3,-71,2],
    [62,5,45,4,-71,3,-57,3,31,2],
    [62,5,67,4,-39,3,-5,3,75,2],
    [62,5,83,4,-72,3,-36,3,-37,2],
    [62,5,95,4,-1,3,13,3,-12,2],
    [63,5,-58,4,-40,3,-9,3,99,2],
    [63,5,-38,4,-49,3,5,3,-80,2],
    [63,5,-23,4,-2,3,78,3,39,2],
    [63,5,-12,4,-62,3,-20,3,-61,2],
    [63,5,-2,4,-25,3,-24,3,96,2],
    [63,5,12,4,-77,3,-23,3,-41,2],
    [63,5,25,4,-1,3,34,3,5,2],
    [63,5,42,4,-14,3,6,3,69,2],
    [63,5,55,4,3,3,85,3,91,2],
    [63,5,81,4,4,3,56,3,93,2],
    [63,5,94,4,-25,3,26,3,22,2],
    [64,5,-59,4,-78,3,45,3,-73,2],
    [64,5,-39,4,-80,3,-62,3,-10,2],
    [64,5,-24,4,-40,3,35,3,92,2],
    [64,5,-14,4,27,3,48,3,8,2],
    [64,5,-3,4,-60,3,-42,3,-27,2],
    [64,5,7,4,21,3,52,3,56,2],
    [64,5,24,4,-51,3,86,3,-72,2],
    [64,5,41,4,-52,3,33,3,57,2],
    [64,5,54,4,-10,3,12,3,-61,2],
    [64,5,77,4,-20,3,-13,3,-27,2],
    [64,5,93,4,-42,3,37,3,27,2],
    [65,5,-61,4,34,3,97,3,-11,2],
    [65,5,-41,4,31,3,75,3,81,2],
    [65,5,-25,4,-80,3,-38,3,-5,2],
    [65,5,-15,4,-44,3,75,3,11,2],
    [65,5,-5,4,-22,3,12,3,-26,2],
    [65,5,6,4,-60,3,83,3,-10,2],
    [65,5,22,4,-53,3,81,3,59,2],
    [65,5,36,4,-72,3,16,3,11,2],
    [65,5,52,4,-8,3,44,3,93,2],
    [65,5,74,4,-17,3,58,3,8,2],
    [65,5,87,4,-42,3,74,3,-36,2],
    [66,5,-64,4,3,3,11,3,76,2],
    [66,5,-44,4,4,3,45,3,-31,2],
    [66,5,-29,4,2,3,71,3,41,2],
    [66,5,-19,4,23,3,52,3,-78,2],
    [66,5,-9,4,42,3,93,3,88,2],
    [66,5,2,4,17,3,71,3,-11,2],
    [66,5,15,4,-43,3,-14,3,82,2],
    [66,5,31,4,8,3,48,3,93,2],
    [66,5,45,4,-51,3,-8,3,88,2],
    [66,5,61,4,-71,3,73,3,82,2],
    [66,5,82,4,-77,3,22,3,94,2],
    [66,5,94,4,-21,3,25,3,61,2],
    [71,5,-59,4,-77,3,51,3,39,2],
    [71,5,-39,4,-56,3,25,3,29,2],
    [71,5,-29,4,-41,3,87,3,-66,2],
    [71,5,-19,4,-20,3,-13,3,16,2],
    [71,5,-9,4,-6,3,81,3,45,2],
    [71,5,2,4,-17,3,53,3,94,2],
    [71,5,15,4,-68,3,56,3,-55,2],
    [71,5,31,4,-16,3,56,3,-8,2],
    [71,5,45,4,-58,3,51,3,-28,2],
    [71,5,61,4,-23,3,38,3,15,2],
    [71,5,82,4,-46,3,-2,3,-57,2],
    [71,5,94,4,-31,3,-30,3,-47,2],
    [72,5,-60,4,27,3,41,3,-44,2],
    [72,5,-40,4,32,3,47,3,5,2],
    [72,5,-29,4,-50,3,-43,3,8,2],
    [72,5,-19,4,-11,3,35,3,-38,2],
    [72,5,-9,4,52,3,86,3,-10,2],
    [72,5,3,4,-79,3,-19,3,86,2],
    [72,5,15,4,23,3,64,3,-19,2],
    [72,5,32,4,-28,3,-27,3,3,2],
    [72,5,46,4,-34,3,-30,3,-85,2],
    [72,5,62,4,-10,3,32,3,-37,2],
    [72,5,84,4,-44,3,23,3,65,2],
    [72,5,96,4,-21,3,78,3,-5,2],
    [73,5,-52,4,-45,3,83,3,31,2],
    [73,5,-37,4,-41,3,94,3,-11,2],
    [73,5,-27,4,23,3,63,3,66,2],
    [73,5,-16,4,-32,3,95,3,4,2],
    [73,5,-6,4,42,3,61,3,84,2],
    [73,5,5,4,22,3,26,3,67,2],
    [73,5,21,4,62,3,98,3,88,2],
    [73,5,35,4,87,3,97,3,71,2],
    [73,5,52,4,32,3,46,3,-60,2],
    [73,5,66,4,-72,3,98,3,-43,2],
    [73,5,91,4,-17,3,87,3,-24,2],
    [74,5,-63,4,24,3,31,3,66,2],
    [74,5,-43,4,2,3,84,3,82,2],
    [74,5,-32,4,-48,3,21,3,18,2],
    [74,5,-22,4,23,3,36,3,86,2],
    [74,5,-11,4,-40,3,14,3,35,2],
    [74,5,-1,4,-10,3,14,3,-52,2],
    [74,5,13,4,-48,3,-41,3,-19,2],
    [74,5,27,4,-80,3,-2,3,23,2],
    [74,5,43,4,66,3,98,3,9,2],
    [74,5,57,4,3,3,32,3,-13,2],
    [74,5,83,4,-18,3,61,3,49,2],
    [74,5,95,4,3,3,11,3,-42,2],
    [75,5,-53,4,-39,3,21,3,66,2],
    [75,5,-38,4,-43,3,-24,3,36,2],
    [75,5,-28,4,-4,3,95,3,-60,2],
    [75,5,-17,4,-60,3,-28,3,-4,2],
    [75,5,-7,4,-31,3,43,3,-19,2],
    [75,5,4,4,-37,3,-14,3,87,2],
    [75,5,17,4,-48,3,-41,3,53,2],
    [75,5,34,4,-74,3,23,3,4,2],
    [75,5,47,4,32,3,97,3,95,2],
    [75,5,64,4,-40,3,43,3,72,2],
    [75,5,85,4,27,3,57,3,9,2],
    [75,5,97,4,23,3,45,3,49,2],
    [76,5,-51,4,18,3,27,3,-35,2],
    [76,5,-36,4,25,3,71,3,-34,2],
    [76,5,-25,4,-62,3,51,3,27,2],
    [76,5,-15,4,-37,3,-12,3,-46,2],
    [76,5,-5,4,-32,3,-1,3,-27,2],
    [76,5,5,4,63,3,82,3,43,2],
    [76,5,21,4,16,3,91,3,65,2],
    [76,5,35,4,-30,3,11,3,73,2],
    [76,5,52,4,-73,3,-40,3,-21,2],
    [76,5,65,4,-37,3,15,3,9,2],
    [76,5,85,4,42,3,94,3,-39,2],
    [76,5,97,4,5,3,52,3,88,2],
    [81,5,-57,4,37,3,51,3,33,2],
    [81,5,-42,4,-31,3,-10,3,46,2],
    [81,5,-33,4,36,3,77,3,-55,2],
    [81,5,-23,4,-39,3,76,3,-24,2],
    [81,5,-14,4,15,3,61,3,96,2],
    [81,5,-4,4,-70,3,-27,3,56,2],
    [81,5,5,4,33,3,46,3,22,2],
    [81,5,17,4,45,3,58,3,97,2],
    [81,5,33,4,3,3,98,3,-21,2],
    [81,5,46,4,-16,3,27,3,24,2],
    [81,5,62,4,-49,3,5,3,-86,2],
    [81,5,74,4,-25,3,48,3,53,2],
    [81,5,94,4,-50,3,-26,3,-47,2],
    [82,5,-61,4,76,3,92,3,97,2],
    [82,5,-46,4,-40,3,87,3,-58,2],
    [82,5,-37,4,64,3,91,3,52,2],
    [82,5,-27,4,-18,3,48,3,-26,2],
    [82,5,-17,4,-49,3,-40,3,-16,2],
    [82,5,-8,4,15,3,33,3,49,2],
    [82,5,3,4,-67,3,32,3,56,2],
    [82,5,15,4,-59,3,4,3,19,2],
    [82,5,31,4,-79,3,-17,3,48,2],
    [82,5,44,4,-80,3,95,3,88,2],
    [82,5,57,4,-71,3,-42,3,33,2],
    [82,5,72,4,-18,3,-11,3,-17,2],
    [82,5,93,4,-35,3,17,3,41,2],
    [83,5,-61,4,-57,3,21,3,-36,2],
    [83,5,-47,4,-36,3,13,3,81,2],
    [83,5,-37,4,-60,3,73,3,21,2],
    [83,5,-28,4,72,3,91,3,-67,2],
    [83,5,-18,4,12,3,42,3,-69,2],
    [83,5,-8,4,-31,3,-2,3,72,2],
    [83,5,2,4,63,3,92,3,56,2],
    [83,5,15,4,-62,3,3,3,-39,2],
    [83,5,31,4,-62,3,-39,3,65,2],
    [83,5,44,4,-50,3,-31,3,55,2],
    [83,5,57,4,-22,3,11,3,66,2],
    [83,5,73,4,-61,3,-16,3,-23,2],
    [83,5,94,4,32,3,64,3,47,2],
    [84,5,-60,4,-9,3,13,3,-47,2],
    [84,5,-45,4,-61,3,76,3,-56,2],
    [84,5,-36,4,41,3,48,3,5,2],
    [84,5,-26,4,5,3,96,3,-40,2],
    [84,5,-16,4,-20,3,93,3,-43,2],
    [84,5,-6,4,-54,3,-31,3,-2,2],
    [84,5,4,4,-29,3,17,3,-35,2],
    [84,5,16,4,23,3,52,3,-70,2],
    [84,5,32,4,38,3,56,3,-89,2],
    [84,5,46,4,-69,3,8,3,61,2],
    [84,5,62,4,-51,3,1,3,-46,2],
    [84,5,74,4,8,3,28,3,48,2],
    [84,5,96,4,-39,3,35,3,-38,2],
    [85,5,-53,4,-47,3,26,3,19,2],
    [85,5,-44,4,8,3,55,3,98,2],
    [85,5,-34,4,-35,3,72,3,65,2],
    [85,5,-24,4,-58,3,5,3,79,2],
    [85,5,-15,4,16,3,97,3,-29,2],
    [85,5,-5,4,-49,3,42,3,-6,2],
    [85,5,5,4,-44,3,-29,3,42,2],
    [85,5,17,4,-27,3,-6,3,-81,2],
    [85,5,33,4,-27,3,22,3,-67,2],
    [85,5,46,4,-14,3,35,3,76,2],
    [85,5,62,4,-17,3,22,3,69,2],
    [85,5,75,4,-62,3,-34,3,-60,2],
    [85,5,95,4,-11,3,55,3,19,2],
    [86,5,-54,4,-24,3,21,3,-5,2],
    [86,5,-45,4,13,3,37,3,-16,2],
    [86,5,-35,4,-50,3,96,3,-62,2],
    [86,5,-26,4,8,3,81,3,-6,2],
    [86,5,-16,4,-53,3,18,3,-59,2],
    [86,5,-7,4,-25,3,93,3,-19,2],
    [86,5,3,4,-20,3,91,3,41,2],
    [86,5,15,4,-31,3,-13,3,52,2],
    [86,5,31,4,-60,3,51,3,5,2],
    [86,5,43,4,57,3,63,3,-2,2],
    [86,5,56,4,15,3,24,3,11,2],
    [86,5,72,4,-33,3,92,3,51,2],
    [86,5,92,4,-48,3,-11,3,-53,2],
    [91,5,-68,4,-51,3,56,3,44,2],
    [91,5,-55,4,-2,3,47,3,59,2],
    [91,5,-46,4,-67,3,82,3,37,2],
    [91,5,-38,4,-27,3,-25,3,-40,2],
    [91,5,-29,4,-68,3,-23,3,51,2],
    [91,5,-21,4,11,3,54,3,34,2],
    [91,5,-12,4,-50,3,26,3,3,2],
    [91,5,-4,4,-26,3,81,3,73,2],
    [91,5,5,4,-38,3,-31,3,-2,2],
    [91,5,16,4,-29,3,34,3,-20,2],
    [91,5,31,4,-57,3,13,3,-59,2],
    [91,5,43,4,-78,3,6,3,79,2],
    [91,5,54,4,21,3,48,3,13,2],
    [91,5,66,4,-8,3,46,3,-63,2],
    [91,5,81,4,-56,3,-50,3,-86,2],
    [91,5,97,4,-64,3,1,3,-15,2],
    [92,5,-58,4,-65,3,1,3,-7,2],
    [92,5,-50,4,-3,3,37,3,-87,2],
    [92,5,-41,4,-27,3,56,3,-78,2],
    [92,5,-32,4,-48,3,36,3,65,2],
    [92,5,-23,4,-71,3,-4,3,-60,2],
    [92,5,-15,4,-16,3,77,3,-38,2],
    [92,5,-6,4,-65,3,72,3,13,2],
    [92,5,3,4,-41,3,53,3,-56,2],
    [92,5,14,4,-30,3,6,3,58,2],
    [92,5,26,4,-49,3,-33,3,-47,2],
    [92,5,41,4,-52,3,32,3,-69,2],
    [92,5,53,4,-50,3,-2,3,78,2],
    [92,5,65,4,-41,3,86,3,55,2],
    [92,5,77,4,-62,3,17,3,-13,2],
    [92,5,97,4,-56,3,14,3,49,2],
    [93,5,-58,4,-51,3,-44,3,-2,2],
    [93,5,-50,4,81,3,88,3,-54,2],
    [93,5,-41,4,42,3,73,3,-39,2],
    [93,5,-32,4,35,3,85,3,73,2],
    [93,5,-23,4,4,3,77,3,-15,2],
    [93,5,-14,4,-30,3,18,3,26,2],
    [93,5,-5,4,-65,3,52,3,-89,2],
    [93,5,4,4,-39,3,12,3,57,2],
    [93,5,15,4,7,3,82,3,-35,2],
    [93,5,27,4,12,3,86,3,24,2],
    [93,5,42,4,31,3,68,3,-29,2],
    [93,5,55,4,-72,3,-30,3,-69,2],
    [93,5,67,4,-54,3,28,3,31,2],
    [93,5,81,4,41,3,64,3,-80,2],
    [94,5,-63,4,-79,3,47,3,-50,2],
    [94,5,-55,4,-29,3,-18,3,6,2],
    [94,5,-46,4,-55,3,-44,3,13,2],
    [94,5,-37,4,-71,3,-12,3,-7,2],
    [94,5,-29,4,34,3,85,3,64,2],
    [94,5,-20,4,12,3,51,3,86,2],
    [94,5,-11,4,-9,3,81,3,-42,2],
    [94,5,-2,4,-47,3,82,3,-49,2],
    [94,5,7,4,-49,3,44,3,26,2],
    [94,5,21,4,48,3,77,3,-46,2],
    [94,5,34,4,-70,3,-41,3,26,2],
    [94,5,46,4,-59,3,2,3,-29,2],
    [94,5,61,4,-39,3,55,3,81,2],
    [94,5,73,4,-35,3,4,3,77,2],
    [94,5,84,4,33,3,73,3,-59,2],
    [95,5,-60,4,-74,3,-28,3,-72,2],
    [95,5,-52,4,-15,3,75,3,-27,2],
    [95,5,-43,4,-52,3,55,3,-82,2],
    [95,5,-35,4,87,3,92,3,52,2],
    [95,5,-26,4,-13,3,87,3,-70,2],
    [95,5,-17,4,-51,3,31,3,-74,2],
    [95,5,-9,4,26,3,44,3,-65,2],
    [95,5,1,4,-43,3,76,3,-31,2],
    [95,5,12,4,-51,3,-1,3,-74,2],
    [95,5,23,4,75,3,84,3,-37,2],
    [95,5,36,4,-80,3,87,3,67,2],
    [95,5,47,4,68,3,86,3,-7,2],
    [95,5,62,4,48,3,84,3,-83,2],
    [95,5,74,4,27,3,85,3,-44,2],
    [95,5,86,4,-58,3,7,3,43,2],
    [96,5,-60,4,-62,3,74,3,41,2],
    [96,5,-52,4,-14,3,48,3,68,2],
    [96,5,-43,4,-69,3,14,3,-55,2],
    [96,5,-35,4,-23,3,67,3,-16,2],
    [96,5,-26,4,-69,3,21,3,-32,2],
    [96,5,-18,4,-27,3,14,3,89,2],
    [96,5,-10,4,68,3,74,3,-9,2],
    [96,5,-1,4,-42,3,7,3,79,2],
    [96,5,11,4,-71,3,-22,3,-46,2],
    [96,5,22,4,-42,3,55,3,48,2],
    [96,5,34,4,-57,3,21,3,-74,2],
    [96,5,46,4,-71,3,-23,3,86,2],
    [96,5,57,4,22,3,61,3,66,2],
    [96,5,72,4,-12,3,82,3,-43,2],
    [96,5,84,4,-71,3,-2,3,53,2]
]; 
// --- END OF ARRAY ---

// =================================================
// === AI STRATEGY (Full Probabilistic Algorithm) ===
// =================================================

// AI Constants (from your provided file)
const AI_CONST = {
    TYPE_EMPTY: 0,
    TYPE_MISS: 2,
    TYPE_HIT: 3,
    TYPE_SUNK: 4,
    SHIP_SIZES: [5, 4, 3, 3, 2], // The player's fleet
    PROB_WEIGHT: 5000, // High value to prioritize targeting
    OPENINGS: [ // Opening book from your file
        {'x': 7, 'y': 3, 'weight': 20}, {'x': 6, 'y': 2, 'weight': 20},
        {'x': 3, 'y': 7, 'weight': 20}, {'x': 2, 'y': 6, 'weight': 20},
        {'x': 6, 'y': 6, 'weight': 20}, {'x': 3, 'y': 3, 'weight': 20},
        {'x': 5, 'y': 5, 'weight': 20}, {'x': 4, 'y': 4, 'weight': 20},
        {'x': 0, 'y': 8, 'weight': 25}, {'x': 1, 'y': 9, 'weight': 30},
        {'x': 8, 'y': 0, 'weight': 25}, {'x': 9, 'y': 1, 'weight': 30},
        {'x': 9, 'y': 9, 'weight': 30}, {'x': 0, 'y': 0, 'weight': 30}
    ]
};

/**
 * A simplified "VirtualGrid" class for the AI to store its knowledge.
 */
class VirtualGrid {
    constructor() {
        this.cells = this.initGrid();
    }
    initGrid() {
        const cells = [];
        for (let x = 0; x < 10; x++) {
            cells[x] = new Array(10).fill(AI_CONST.TYPE_EMPTY);
        }
        return cells;
    }
}

/**
 * A simplified "VirtualShip" class for the AI to run calculations.
 */
class VirtualShip {
    constructor(size, virtualGrid) {
        this.shipLength = size;
        this.virtualGrid = virtualGrid; // Reference to the AI's grid
        this.sunk = false;
        this.x = -1;
        this.y = -1;
        this.direction = 0; // 0 = Vertical, 1 = Horizontal
    }

    // A fast, inlined check from your provided file
    isLegal(x, y, direction) {
        if (direction === 0) { // Vertical
            if (x + this.shipLength > 10) return false;
            for (let i = 0; i < this.shipLength; i++) {
                const cellType = this.virtualGrid.cells[x + i][y];
                if (cellType === AI_CONST.TYPE_MISS || cellType === AI_CONST.TYPE_SUNK) {
                    return false;
                }
            }
        } else { // Horizontal
            if (y + this.shipLength > 10) return false;
            for (let i = 0; i < this.shipLength; i++) {
                const cellType = this.virtualGrid.cells[x][y + i];
                if (cellType === AI_CONST.TYPE_MISS || cellType === AI_CONST.TYPE_SUNK) {
                    return false;
                }
            }
        }
        return true;
    }
    
    create(x, y, direction) {
        this.x = x;
        this.y = y;
        this.direction = direction;
    }

    getAllShipCells() {
        const cells = [];
        for (let i = 0; i < this.shipLength; i++) {
            if (this.direction === 0) { // Vertical
                cells.push({ x: this.x + i, y: this.y });
            } else { // Horizontal
                cells.push({ x: this.x, y: this.y + i });
            }
        }
        return cells;
    }
}

/**
 * The new, smarter AI class.
 * This holds the logic for a *single* game.
 */
class AI {
    constructor(game) {
        this.game = game; // A reference to the parent game object
        this.probGrid = this.initProbs();
        
        // Run the first calculation to populate the heatmap
        this.recalculateProbs();
    }

    /**
     * Gets the AI's next guess (1-100).
     */
    getGuess() {
        let maxProbability = -1;
        let maxProbCoords = { x: 0, y: 0 };
        
        // Add opening book weights
        for (const cell of AI_CONST.OPENINGS) {
            if (this.game.virtualGrid.cells[cell.x][cell.y] === AI_CONST.TYPE_EMPTY) {
                this.probGrid[cell.x][cell.y] += cell.weight;
            }
        }

        // Find the square with the highest probability
        for (let r = 0; r < 10; r++) {
            for (let c = 0; c < 10; c++) {
                // Don't guess squares we've already hit
                if (this.game.virtualGrid.cells[r][c] !== AI_CONST.TYPE_EMPTY) {
                    this.probGrid[r][c] = 0;
                }
                
                if (this.probGrid[r][c] > maxProbability) {
                    maxProbability = this.probGrid[r][c];
                    maxProbCoords = { x: r, y: c };
                }
            }
        }
        
        // Failsafe in case all probabilities are 0
        if (maxProbability <= 0) {
            let rx, ry;
            do {
                rx = Math.floor(Math.random() * 10);
                ry = Math.floor(Math.random() * 10);
            } while (this.game.virtualGrid.cells[rx][ry] !== AI_CONST.TYPE_EMPTY);
            maxProbCoords = { x: rx, y: ry };
        }

        this.game.lastAiGuess = (maxProbCoords.x * 10) + maxProbCoords.y + 1;
        return this.game.lastAiGuess; // Convert to 1-100
    }

    /**
     * Updates the AI's internal state with the result of its last guess.
     */
    updateState(guess, result) {
        const guessIdx = guess - 1; // Convert to 0-99
        const x = Math.floor(guessIdx / 10);
        const y = guessIdx % 10;

        if (result === 'SUNK') {
            this.game.virtualGrid.cells[x][y] = AI_CONST.TYPE_HIT; // Mark the hit
            
            // Find which ship was sunk (based on surrounding hits)
            const sunkShip = this._findSunkShip(x, y);
            
            if (sunkShip) {
                for (const cell of sunkShip.cells) {
                    this.game.virtualGrid.cells[cell.x][cell.y] = AI_CONST.TYPE_SUNK;
                }
                // Remove this ship size from the AI's fleet
                const shipIndex = this.game.virtualFleet.findIndex(ship => !ship.sunk && ship.shipLength === sunkShip.size);
                if (shipIndex > -1) {
                    this.game.virtualFleet[shipIndex].sunk = true;
                }
            }
            
        } else if (result === 'HIT') {
            this.game.virtualGrid.cells[x][y] = AI_CONST.TYPE_HIT;
            
        } else { // "MISS"
            this.game.virtualGrid.cells[x][y] = AI_CONST.TYPE_MISS;
        }

        // --- THIS IS THE "NO COMPROMISE" ---
        // Re-calculate the entire heatmap on EVERY guess, just like your file.
        this.recalculateProbs();
    }
    
    /**
     * Re-calculates the entire probability heatmap.
     * This is the "expensive" function from your file.
     */
    recalculateProbs() {
        this.resetProbs();
        let coords;
        // Get all ships the AI thinks are still alive
        const activeFleet = this.game.virtualFleet.filter(ship => !ship.sunk);

        for (const ship of activeFleet) {
            for (let r = 0; r < 10; r++) {
                for (let c = 0; c < 10; c++) {
                    // Check Vertical
                    if (ship.isLegal(r, c, 0)) {
                        ship.create(r, c, 0);
                        coords = ship.getAllShipCells();
                        if (this.passesThroughHitCell(coords)) {
                            for (const cell of coords) {
                                this.probGrid[cell.x][cell.y] += AI_CONST.PROB_WEIGHT * this.numHitCellsCovered(coords);
                            }
                        } else {
                            for (const cell of coords) {
                                this.probGrid[cell.x][cell.y]++;
                            }
                        }
                    }
                    // Check Horizontal
                    if (ship.isLegal(r, c, 1)) {
                        ship.create(r, c, 1);
                        coords = ship.getAllShipCells();
                        if (this.passesThroughHitCell(coords)) {
                            for (const cell of coords) {
                                this.probGrid[cell.x][cell.y] += AI_CONST.PROB_WEIGHT * this.numHitCellsCovered(coords);
                            }
                        } else {
                            for (const cell of coords) {
                                this.probGrid[cell.x][cell.y]++;
                            }
                        }
                    }
                }
            }
        }
    }

    // --- Helper functions from your file ---
    
    initProbs() {
        const grid = [];
        for (let x = 0; x < 10; x++) {
            grid[x] = new Array(10).fill(0);
        }
        return grid;
    }
    
    resetProbs() {
        for (let x = 0; x < 10; x++) {
            for (let y = 0; y < 10; y++) {
                this.probGrid[x][y] = 0;
            }
        }
    }
    
    passesThroughHitCell(shipCells) {
        for (const cell of shipCells) {
            if (this.game.virtualGrid.cells[cell.x][cell.y] === AI_CONST.TYPE_HIT) {
                return true;
            }
        }
        return false;
    }
    
    numHitCellsCovered(shipCells) {
        let cells = 0;
        for (const cell of shipCells) {
            if (this.game.virtualGrid.cells[cell.x][cell.y] === AI_CONST.TYPE_HIT) {
                cells++;
            }
        }
        return cells;
    }

    // Helper to find all connected "HIT" squares to identify a sunk ship
    _findSunkShip(x, y) {
        const hits = [{x, y}];
        const checked = new Set([`${x},${y}`]);
        const queue = [{x, y}];
        const vGrid = this.game.virtualGrid.cells;
        
        while(queue.length > 0) {
            const {x, y} = queue.shift();
            const neighbors = [{x: x-1, y}, {x: x+1, y}, {x, y: y-1}, {x, y: y+1}];
            
            for(const n of neighbors) {
                const key = `${n.x},${n.y}`;
                if (n.x >= 0 && n.x < 10 && n.y >= 0 && n.y < 10 && !checked.has(key)) {
                    checked.add(key);
                    if(vGrid[n.x][n.y] === AI_CONST.TYPE_HIT) {
                        hits.push(n);
                        queue.push(n);
                    }
                }
            }
        }
        // This is a simple check. A more robust check would validate against ship sizes.
        const size = hits.length;
        if (AI_CONST.SHIP_SIZES.includes(size)) {
             return { cells: hits, size: size };
        }
        // If no ship of this size is left, it's a "false" sink, part of a larger ship
        const remainingShips = this.game.virtualFleet.filter(s => !s.sunk);
        if (remainingShips.some(s => s.shipLength === size)) {
             return { cells: hits, size: size };
        }

        return null; // Not a recognized sunk ship
    }
}

// ===========================================
// === END OF AI LOGIC ===
// ===========================================


// --- Main Server Helper Functions ---

function generateNewShipLayout() { //
    const randomIndex = Math.floor(Math.random() * recrCode.length);
    return [...recrCode[randomIndex]];
}

function checkHit(target, game, gameId) { //
  target = Number(target);
  if (target < 1 || target > 100) return "INVALID TARGET";
  
  if (game.playerHits.has(target)) {
    return "MISS";
  }

  const gameShips = game.shipLayout;
  for (let i = 0; i < gameShips.length; i += 2) {
    const originalPosition = gameShips[i];
    const position = Math.abs(originalPosition);
    const size = gameShips[i + 1];
    const isVertical = originalPosition < 0;

    for (let j = 0; j < size; j++) {
      const square = isVertical ? position + j * 10 : position + j;
      if (square === target) {
        game.playerHits.add(target);
        const shipIndex = i / 2;
        const ship = game.shipHealth[shipIndex];
        ship.hits++;
        
        if (ship.hits === ship.size) {
          ship.isSunk = true;
          return `SUNK_${ship.size}_${originalPosition}`;
        } else {
          return "HIT";
        }
      }
    }
  }
  
  game.playerHits.add(target);
  return "MISS";
}

function cleanupOldGames() { //
  const now = Date.now();
  let deletedCount = 0;
  for (const [gameId, gameState] of activeGames.entries()) {
    if (now - gameState.lastActivity > GAME_TIMEOUT_MS) {
      activeGames.delete(gameId);
      deletedCount++;
    }
  }
  if (deletedCount > 0) {
    console.log(`Cleaned up ${deletedCount} inactive game(s). Total games remaining: ${activeGames.size}`);
  }
}

setInterval(cleanupOldGames, 1000 * 60 * 5); //

//The main server
const server = http.createServer((req, res) => { //
  const { query } = url.parse(req.url, true); //
  
  res.setHeader('Access-Control-Allow-Origin', '*'); //
  
  if (req.method === 'HEAD' && req.url === '/') { //
    res.writeHead(200, { 'Content-Type': 'text/plain' });
    res.end();
    return;
  }
  
  // === ROUTE 1: NEW GAME (User Joins) ===
  if (req.method === 'GET' && query.action === 'newGame') { //
    const gameId = randomUUID();
    const layout = generateNewShipLayout();
    
    // Create the newGame object *first*
    const newGame = {
      shipLayout: layout, //
      aiGuesses: new Set(), //
      lastActivity: Date.now(), //
      shipHealth: [ //
        { size: layout[1], hits: 0, isSunk: false },
        { size: layout[3], hits: 0, isSunk: false },
        { size: layout[5], hits: 0, isSunk: false },
        { size: layout[7], hits: 0, isSunk: false },
        { size: layout[9], hits: 0, isSunk: false }
      ],
      playerHits: new Set(), //
      // AI properties
      virtualGrid: new VirtualGrid(), // AI's knowledge of player's board
      virtualFleet: AI_CONST.SHIP_SIZES.map(size => new VirtualShip(size, null)), // AI's list of player's ships
      ai: null, // Will be set next
      lastAiGuess: -1
    };
    
    // Set the virtual grid for each ship in the fleet
    newGame.virtualFleet.forEach(ship => {
        ship.virtualGrid = newGame.virtualGrid;
    });
    
    // Now create the AI instance and pass the game object to it
    newGame.ai = new AI(newGame);
    
    activeGames.set(gameId, newGame); //
    console.log(`New game started: ${gameId}. Total games: ${activeGames.size}`); //
    
    res.writeHead(200, { 'Content-Type': 'text/plain' }); //
    res.end(gameId); //
  }
  
  // === ROUTE 2: MAKE A GUESS ===
  else if (req.method === 'GET' && query.target && query.gameId) { //
    const game = activeGames.get(query.gameId); //
    
    if (!game) {
      res.writeHead(404, { 'Content-Type': 'text/plain' });
      res.end('Error: Game not found. Your session may have expired.');
    } else {
      game.lastActivity = Date.now(); //
      
      let aiGuessResult = 'MISS';
      if (query.aiSunk) { //
        if (query.aiSunk.startsWith('SUNK_')) {
            aiGuessResult = 'SUNK';
        } else if (query.aiSunk === 'HIT') {
            aiGuessResult = 'HIT';
        }
      }

      // 2. Feed this result to the AI to update its internal state
      //    (This is the "slow" step that runs on *every* request)
      if (game.lastAiGuess !== -1) {
          game.ai.updateState(game.lastAiGuess, aiGuessResult);
      }
      
      // 3. Check the *player's* current guess
      const playerResult = checkHit(query.target, game, query.gameId);
      
      // 4. Get the AI's *new* smart guess from the updated heatmap
      let aiGuess;
      do {
          aiGuess = game.ai.getGuess();
      } while (game.aiGuesses.has(aiGuess)); // Ensure we don't guess the same square twice
      
      // 5. Add the AI's new guess to the game's "used" set
      game.aiGuesses.add(aiGuess);
      
      // 6. Send the response
      const response = `${playerResult},${aiGuess}`;
      
      // Game logs are removed for quiet operation
      
      res.writeHead(200, { 'Content-Type': 'text/plain' });
      res.end(response);
    }
  }
  
  // === ELSE: INVALID REQUEST ===
  else { //
    res.writeHead(404);
    res.end('Send a GET request with ?action=newGame or ?target=NUMBER&gameId=YOUR_ID'); //
  }
});

const port = process.env.PORT || 3000;
server.listen(port, () => {
    console.log(`Stateful Battleship server running on port ${port}`);
});
